{"version":3,"sources":["webpack:///./node_modules/file-saver/FileSaver.js","webpack:///(webpack)/buildin/amd-define.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./src/app/ssm/policy/policy-manage-pdf/policy-manage-pdf.component.html","webpack:///./src/app/ssm/policy/policy-manage-pdf/policy-manage-pdf.component.scss","webpack:///./src/app/ssm/policy/policy-manage-pdf/policy-manage-pdf.component.ts","webpack:///./src/app/ssm/policy/policy-manage-pdf/policy-manage-pdf.module.ts","webpack:///./src/constants/emitter.ts","webpack:///./src/models/folder.ts","webpack:///./src/models/manage-pdf.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA,KAAK,OAAO;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D,0DAA0D,gBAAgB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,GAAG,yBAAyB;AAC7G;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA,GAAG;AAAA;AACH;;;;;;;;;;;;AC3LA;AACA;AACA;;;;;;;;;;;;ACFA;AACA;;;;;;;;;;;;;ACDA,wiBAAwiB,cAAc,MAAM,YAAY,MAAM,uBAAuB,4RAA4R,mBAAmB,kBAAkB,qBAAqB,iBAAiB,kXAAkX,6BAA6B,6LAA6L,+BAA+B,0RAA0R,2BAA2B,2BAA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","file":"policy-manage-pdf-policy-manage-pdf-module.71a446342ea46f6c9968.js","sourcesContent":["/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.3.2\n * 2016-06-16 18:25:19\n *\n * By Eli Grey, http://eligrey.com\n * License: MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof view === \"undefined\" || typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, is_safari = /constructor/i.test(view.HTMLElement) || view.safari\n\t\t, is_chrome_ios =/CriOS\\/[\\d]+/.test(navigator.userAgent)\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t// the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n\t\t, arbitrary_revoke_timeout = 1000 * 40 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, auto_bom = function(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\t// note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});\n\t\t\t}\n\t\t\treturn blob;\n\t\t}\n\t\t, FileSaver = function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, force = type === force_saveable_type\n\t\t\t\t, object_url\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\tif ((is_chrome_ios || (force && is_safari)) && view.FileReader) {\n\t\t\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = function() {\n\t\t\t\t\t\t\tvar url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\n\t\t\t\t\t\t\tvar popup = view.open(url, '_blank');\n\t\t\t\t\t\t\tif(!popup) view.location.href = url;\n\t\t\t\t\t\t\turl=undefined; // release reference before dispatching\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (!object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (force) {\n\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar opened = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (!opened) {\n\t\t\t\t\t\t\t// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n\t\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tsave_link.href = object_url;\n\t\t\t\t\tsave_link.download = name;\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfs_error();\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name, no_auto_bom) {\n\t\t\treturn new FileSaver(blob, name || blob.name || \"download\", no_auto_bom);\n\t\t}\n\t;\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function(blob, name, no_auto_bom) {\n\t\t\tname = name || blob.name || \"download\";\n\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name);\n\t\t};\n\t}\n\n\tFS_proto.abort = function(){};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd !== null)) {\n  define(\"FileSaver.js\", function() {\n    return saveAs;\n  });\n}\n","module.exports = function() {\r\n\tthrow new Error(\"define cannot be used indirect\");\r\n};\r\n","/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col\\\" *ngIf=\\\"canHandlePolicy\\\">\\n    <button class=\\\"btn btn-primary\\\"\\n      (click)=\\\"FileUpload.click()\\\"\\n      [disabled]=\\\"isUploading\\\">\\n      Upload Pdf\\n      <i *ngIf=\\\"isUploading\\\" class=\\\"fa fa-refresh fa-spin\\\"></i>\\n    </button>\\n\\n    <input\\n      type=\\\"file\\\"\\n      hidden\\n      name=\\\"file\\\"\\n      #FileUpload\\n      multiple\\n      (change)=\\\"getFile()\\\"\\n      [attr.accept]=\\\"accept_file\\\">\\n  </div>\\n</div>\\n\\n<div class=\\\"table-responsive py-4\\\">\\n  <span>Showing {{ query.from }} to {{ query.to }} of {{ query.totalElements }} entries</span>\\n  <table class=\\\"table pdf-table\\\">\\n    <thead>\\n      <tr>\\n        <th>Record ID</th>\\n        <th class=\\\"cursor-pointer\\\">\\n          File Name\\n        </th>\\n        <th>Action</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let file of files;\\\">\\n        <td>{{ file.record_id }}</td>\\n        <td>{{ file.fileName }}</td>\\n        <td>\\n          <button type=\\\"button\\\" class=\\\"mr-1 btn btn-primary\\\" (click)=\\\"downloadFile(file)\\\"><i class=\\\"fa fa-download\\\"></i></button>\\n          <button type=\\\"button\\\" *ngIf=\\\"canHandlePolicy\\\" class=\\\"mr-1 btn btn-danger\\\" (click)=\\\"removeFile(file)\\\"><i class=\\\"fa fa-trash\\\"></i></button>\\n        </td>\\n      </tr>\\n      <tr [ngClass]=\\\"{ 'hidden': files.length > 0 }\\\">\\n        <td colspan=\\\"2\\\" class=\\\"text-center\\\">\\n          Data not found\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\\n<div class=\\\"pagination mt-4\\\" [ngClass]=\\\"{ 'hidden': files.length === 0 }\\\">\\n  <pagination\\n    class=\\\"pagination-md\\\"\\n    [totalItems]=\\\"query.totalElements\\\"\\n    [(ngModel)]=\\\"query.currentPage\\\"\\n    pageBtnClass=\\\"btn\\\"\\n    [itemsPerPage]=\\\"query.size\\\"\\n    [maxSize]=\\\"5\\\"\\n    (pageChanged)=\\\"pageChanged($event)\\\"\\n    previousText=\\\"&lsaquo;\\\"\\n    nextText=\\\"&rsaquo;\\\"\\n    firstText=\\\"&laquo;\\\"\\n    lastText=\\\"&raquo;\\\">\\n  </pagination>\\n</div>\\n\"","module.exports = \".pdf-table.table thead th,\\n.pdf-table.table tbody td {\\n  min-width: 200px; }\\n  .pdf-table.table thead th:last-child,\\n  .pdf-table.table tbody td:last-child {\\n    max-width: 150px;\\n    width: 150px; }\\n\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { QueryBuilder } from 'shared/utils/query-builder';\nimport { NotifyService } from 'shared/utils/notify.service';\nimport { UploaderService } from 'shared/services/uploader.service';\nimport { RoleService } from 'app/role.service';\nimport { ManageFileService } from 'shared/services/manage-file.service';\nimport { ManagePdf } from 'models/manage-pdf';\nimport { ActivatedRoute } from '@angular/router';\nimport { saveAs } from 'file-saver';\nimport { FolderService } from 'shared/services/folder.service';\nimport { EventEmitterService } from 'shared/utils/event-emitter.service';\nimport { EMITTER_TYPE } from 'constants/emitter';\n\n@Component({\n  selector: 'app-policy-manage-pdf',\n  templateUrl: './policy-manage-pdf.component.html',\n  styleUrls: ['./policy-manage-pdf.component.scss'],\n})\nexport class PolicyManagePdfComponent implements OnInit {\n  @ViewChild('FileUpload')\n  private _fileUpload: ElementRef;\n\n  public query: QueryBuilder = new QueryBuilder();\n  public files: ManagePdf[] = [];\n\n  public isUploading = false;\n\n  private _mimeTypes = ['application/pdf', '.pdf'];\n\n  public get accept_file(): string {\n    return this._mimeTypes.toString();\n  }\n\n  get canHandlePolicy(): boolean {\n    return this._role.is_admin || this._role.is_sale_director;\n  }\n\n  constructor(\n    private _notify: NotifyService,\n    private _uploader: UploaderService,\n    private _role: RoleService,\n    private _manageFileSv: ManageFileService,\n    private _route: ActivatedRoute,\n    private _folderSv: FolderService,\n    private _emitter: EventEmitterService,\n  ) {}\n\n  ngOnInit() {\n    this._getFiles();\n    this._showFolder();\n  }\n\n  private _getFiles() {\n    const opts = {\n      ...this.query.queryJSON(),\n      folderId: this._route.snapshot.paramMap.get('id'),\n    };\n    this._manageFileSv.getFiles(opts).subscribe(\n      (res) => {\n        this.query.setQuery(res);\n        this.files = res.list;\n      },\n      (errors) => {\n        this._notify.error(errors);\n      },\n    );\n  }\n\n  private _showFolder() {\n    this._folderSv.showFolder(+this._route.snapshot.paramMap.get('id')).subscribe((res) => {\n      this._emitter.publishData({\n        type: EMITTER_TYPE.CHANGE_FOLDER,\n        data: res.name,\n      });\n    });\n  }\n\n  public getFile() {\n    const files = this._fileUpload.nativeElement.files;\n    if (files.length === 0) {\n      return;\n    }\n\n    const data: any[] = [];\n\n    Array.from(files).forEach((file: File) => {\n      // Validator File Type\n      if (this._mimeTypes.indexOf(file.type) < 0) {\n        this._notify.error('You can not upload files that are not in pdf format');\n        return;\n      }\n\n      // Validator File Size\n      if (file.size >= 10485760) {\n        this._notify.error('You can not upload images larger than 10MB in size');\n        return;\n      }\n\n      data.push({\n        key: 'file',\n        value: file,\n      });\n    });\n\n    if (!data.length) {\n      return;\n    }\n\n    this._uploadFile(data);\n  }\n\n  private _uploadFile(data: any[]) {\n    this.isUploading = true;\n    const params = {\n      folderId: this._route.snapshot.paramMap.get('id'),\n    };\n\n    this._uploader.store(`manage-file`, data, params).subscribe(\n      (res) => {\n        this.isUploading = false;\n        this._notify.success(`upload ${data.length} files success`);\n        this._getFiles();\n        this._removeFile();\n      },\n      (errors) => {\n        this.isUploading = false;\n        this._notify.error(errors);\n        this._removeFile();\n      },\n    );\n  }\n\n  private _removeFile() {\n    this._fileUpload.nativeElement.value = null;\n  }\n\n  public downloadFile(file: ManagePdf) {\n    this._manageFileSv.downloadFile(file.id).subscribe(\n      (res) => {\n        saveAs(res, file.fileName);\n      },\n      (errors) => {\n        this._notify.error(errors);\n      },\n    );\n  }\n\n  public removeFile(file: ManagePdf) {\n    this._manageFileSv.deleteFile(file.id).subscribe(\n      (res) => {\n        this._notify.success(`delete file success`);\n        this._getFiles();\n      },\n      (errors) => {\n        this._notify.error(errors);\n      },\n    );\n  }\n\n  public pageChanged(event) {\n    this.query.currentPage = event.page;\n    this._getFiles();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PolicyManagePdfComponent } from './policy-manage-pdf.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { FormsModule } from '@angular/forms';\nimport { ManageFileService } from 'shared/services/manage-file.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PolicyManagePdfComponent,\n  },\n];\n\n@NgModule({\n  imports: [CommonModule, RouterModule.forChild(routes), PaginationModule.forRoot(), FormsModule],\n  declarations: [PolicyManagePdfComponent],\n  providers: [ManageFileService],\n})\nexport class PolicyManagePdfModule {}\n","export const EMITTER_TYPE = {\n  FILTER_CUSTOMER: 'customer:filter',\n  CREATE_CUSTOMER: 'customer:create',\n  GMAP_CLICK: 'gmap:click',\n  CREATE_SALE_ACTIVITY: 'saleActivity:create',\n  FILTER_SALE_ACTIVITY: 'saleActivity:filter',\n  REMOVE_SALE_ACTIVITY: 'saleActivity:remove',\n  UPDATE_SALE_ACTIVITY: 'saleActivity:update',\n  FILTER_POLICY: 'policy:filter',\n  CREATE_POLICY: 'policy:create',\n  CREATE_BTS: 'bts:create',\n  FILTER_BTS: 'bts:filter',\n  GMAP_DISTANCE: 'gmap:distance',\n  GMAP_BTS: 'gmap:bts',\n  GMAP_BTS_CREATE: 'gmap:bts:create',\n  FILTER_CARE_ACTIVITY: 'careActivity:filter',\n  CREATE_CARE_ACTIVITY: 'careActivity:create',\n  CREATE_QUOTATION: 'quotation:create',\n  CHANGE_CUSTOMER_QUOTATION: 'quotation:changeCustomer',\n  FILTER_QUOTATION: 'quotation:filter',\n  FILTER_PROPOSAL: 'proposal:filter',\n  FILTER_DASHBOARD: 'dashboard:filter',\n  CREATE_USER: 'user:create',\n  CREATE_SALE_ACTIVITY_2: 'saleActivity2:create',\n  FILTER_SALE_ACTIVITY_2: 'saleActivity2:filter',\n  CHANGE_FOLDER: 'folder:change',\n  GMAP_PLACE_CHANGED: 'gmap:place:changed',\n  GMAP_ZOOM_TO: 'gmap:zoomTp',\n};\n","import { BaseModelInterface, BaseModel } from './base.model';\nimport { Deserializable } from 'shared/interfaces/deserializable';\n\ninterface FolderInterface extends BaseModelInterface {\n  name: string;\n}\nexport class Folder extends BaseModel implements Deserializable<Folder> {\n  name: string;\n\n  constructor() {\n    super();\n  }\n\n  deserialize(input: Partial<FolderInterface>): Folder {\n    if (!input) {\n      return;\n    }\n    super.deserialize(input);\n    Object.assign(this, input);\n    return this;\n  }\n\n  public toJSON() {\n    return {\n      name: this.name,\n    };\n  }\n}\n","import { BaseModelInterface, BaseModel } from './base.model';\nimport { Deserializable } from 'shared/interfaces/deserializable';\nimport { Folder } from './folder';\n\ninterface ManagePdfInterface extends BaseModelInterface {\n  fileName: string;\n  fileType: string;\n  folder: Folder;\n  folderId: number;\n  recordId;\n}\n\nexport class ManagePdf extends BaseModel implements Deserializable<ManagePdf> {\n  fileName: string;\n  fileType: string;\n  folder: Folder;\n  folderId: number;\n  recordId: number;\n  public get record_id(): string {\n    return this.recordId && ('00000' + this.recordId).substr(-5);\n  }\n\n  get folder_record_id(): string {\n    return `${this.folder ? this.folder.name : 'ROOT'} - ${this.fileName}`;\n  }\n\n  constructor() {\n    super();\n  }\n\n  deserialize(input: Partial<ManagePdfInterface>): ManagePdf {\n    if (!input) {\n      return;\n    }\n    super.deserialize(input);\n    Object.assign(this, input);\n\n    this.folder = input.folder instanceof Folder ? input.folder : new Folder().deserialize(input.folder);\n    return this;\n  }\n}\n"],"sourceRoot":""}