{"version":3,"sources":["webpack:///./src/app/msm/scheduler-filter/scheduler-filter.component.html","webpack:///./src/app/msm/scheduler-filter/scheduler-filter.component.scss","webpack:///./src/app/msm/scheduler-filter/scheduler-filter.component.ts","webpack:///./src/app/msm/scheduler-filter/scheduler-filter.module.ts","webpack:///./src/shared/services/branch.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,69CAA69C,yCAAyC,ssBAAssB,uCAAuC,6tB;;;;;;;;;;;ACAnvE,0CAA0C,qBAAqB,EAAE,mCAAmC,mBAAmB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvE;AACc;AAC/B;AAEgB;AAEV;AACkB;AACW;AACgB;AAClC;AACiB;AACL;AACE;AACS;AACxB;AACW;AAEb;AACgB;AAO/D;IA8BE,kCACU,WAA4B,EAC5B,QAA6B,EAC7B,OAAsB,EACtB,KAAkB,EAClB,SAAwB;QAJxB,gBAAW,GAAX,WAAW,CAAiB;QAC5B,aAAQ,GAAR,QAAQ,CAAqB;QAC7B,YAAO,GAAP,OAAO,CAAe;QACtB,UAAK,GAAL,KAAK,CAAa;QAClB,cAAS,GAAT,SAAS,CAAe;QAlC3B,eAAU,GAAG;YAClB,QAAQ,EAAE,IAAI;YACd,SAAS,EAAE,IAAI;YACf,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;SACf,CAAC;QASK,cAAS,GAA2B,sEAAE,CAAC,EAAE,CAAC,CAAC;QAC3C,mBAAc,GAAG,IAAI,oDAAO,EAAU,CAAC;QAEvC,sBAAiB,GAAG,6EAAiB,CAAC;QAEtC,sBAAiB,GAAG,KAAK,CAAC;QAEjC,WAAW;QACJ,aAAQ,GAAa,EAAE,CAAC;QACxB,oBAAe,GAAG,KAAK,CAAC;IAY5B,CAAC;IA7BJ,sBAAW,oDAAc;aAAzB;YACE,MAAM,CAAC,CACL,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS;gBAC3B,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO;gBACzB,mCAAM,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,mCAAM,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAC5E,CAAC;QACJ,CAAC;;;OAAA;IAaD,sBAAI,gDAAU;aAAd;YACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC;QAC5D,CAAC;;;OAAA;IAUD,2CAAQ,GAAR;QACE,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAEO,iDAAc,GAAtB;QAAA,iBAcC;QAbC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,SAAS,CACtC,UAAC,GAAG;gBACF,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;gBAC7B,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC/B,CAAC,EACD,UAAC,MAAM;gBACL,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;gBAC7B,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC7B,CAAC,CACF,CAAC;QACJ,CAAC;IACH,CAAC;IAEM,kDAAe,GAAtB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,iDAAiD,CAAC,CAAC;YACxE,MAAM,CAAC;QACT,CAAC;QAED,IAAM,MAAM,GAAQ,EAAE,CAAC;QAEvB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,SAAS,GAAG,mCAAM,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QAC5E,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,OAAO,GAAG,mCAAM,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;QACxE,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC;QAClD,CAAC;QACD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;QAC7C,CAAC;QAED,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;YACxB,IAAI,EAAE,+DAAY,CAAC,oBAAoB;YACvC,MAAM;SACP,CAAC,CAAC;IACL,CAAC;IAEO,uDAAoB,GAA5B;QAAA,iBAWC;QAVC,IAAI,CAAC,WAAW;aACb,eAAe,CAAC;YACf,IAAI,EAAE,CAAC;YACP,IAAI,EAAE,GAAG;YACT,IAAI,EAAE,KAAK;YACX,MAAM,EAAE,IAAI;SACb,CAAC;aACD,SAAS,CAAC,UAAC,GAAG;YACb,KAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,mDAAgB,GAAxB,UAAyB,SAAqB;QAA9C,iBAwBC;QAvBC,IAAI,CAAC,SAAS,GAAG,8EAAM,CACrB,sEAAE,CAAC,SAAS,CAAC,EAAE,gBAAgB;QAC/B,IAAI,CAAC,cAAc,CAAC,IAAI,CACtB,yFAAY,CAAC,GAAG,CAAC,EACjB,yGAAoB,EAAE,EACtB,uEAAG,CAAC,cAAM,QAAC,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,EAA/B,CAA+B,CAAC,EAC1C,oFAAS,CAAC,UAAC,IAAI;YACb,YAAI,CAAC,WAAW;iBACb,eAAe,CAAC;gBACf,IAAI,EAAE,CAAC;gBACP,IAAI,EAAE,GAAG;gBACT,IAAI,EAAE,KAAK;gBACX,MAAM,EAAE,IAAI;gBACZ,SAAS,EAAE,IAAI,IAAI,EAAE;aACtB,CAAC;iBACD,GAAG,CAAC,UAAC,GAAG,IAAK,UAAG,CAAC,YAAY,EAAhB,CAAgB,CAAC;iBAC9B,IAAI,CACH,sFAAU,CAAC,cAAM,6EAAE,CAAC,EAAE,CAAC,EAAN,CAAM,CAAC,EAAE,sBAAsB;YAChD,uEAAG,CAAC,cAAM,QAAC,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,EAAhC,CAAgC,CAAC,CAC5C;QAZH,CAYG,CACJ,CACF,CACF,CAAC;IACJ,CAAC;IA3HU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;yCAgCuB,gFAAe;YAClB,uFAAmB;YACpB,0EAAa;YACf,6DAAW;YACP,6EAAa;OAnCvB,wBAAwB,CA4HpC;IAAD,+BAAC;CAAA;AA5HoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BI;AACM;AACyB;AACjB;AACO;AACjB;AAES;AACtD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oFAAwB;KACpC;CACF,CAAC;AAKF;IAAA;IAAoC,CAAC;IAAxB,qBAAqB;QAJjC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,EAAE,0DAAW,EAAE,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,2EAAkB,CAAC,OAAO,EAAE,EAAE,mEAAc,CAAC;YACjH,YAAY,EAAE,CAAC,oFAAwB,CAAC;SACzC,CAAC;OACW,qBAAqB,CAAG;IAAD,4BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBS;AACA;AACJ;AACI;AACA;AAK3C;IACE,uBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAEjC,qCAAa,GAApB,UAAqB,IAAU;QAC7B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG;YAC3C,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,WAAI,oDAAM,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,EAA9B,CAA8B,CAAC,CAAC;YACpF,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,uCAAe,GAAtB,UAAuB,IAAU;QAC/B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG;YAC7C,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,WAAI,wDAAQ,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,EAAhC,CAAgC,CAAC,CAAC;YACxF,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,uCAAe,GAAtB,UAAuB,IAAU;QAC/B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG;YAC7C,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,WAAI,wDAAQ,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,EAAhC,CAAgC,CAAC,CAAC;YAExF,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IAvBU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAE0B,uDAAU;OADzB,aAAa,CAwBzB;IAAD,oBAAC;CAAA;AAxByB","file":"scheduler-filter-scheduler-filter-module.809b6bb2049cac072792.js","sourcesContent":["module.exports = \"<form novalidate>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-3 col-md-6 form-group\\\">\\n      <label for=\\\"SaleActivity\\\">Customer</label>\\n      <ng-select\\n        [items]=\\\"customers | async\\\"\\n        class=\\\"text-left\\\"\\n        [closeOnSelect]=\\\"true\\\"\\n        [clearable]=\\\"true\\\"\\n        [loading]=\\\"isLoadingCusotmer\\\"\\n        placeholder=\\\"please select customer\\\"\\n        [searchable]=\\\"true\\\"\\n        name=\\\"customer\\\"\\n        [(ngModel)]=\\\"filterTerm.customer\\\"\\n        bindLabel=\\\"customerName\\\"\\n        [typeahead]=\\\"customerInput$\\\">\\n      </ng-select>\\n    </div>\\n\\n    <div class=\\\"col-lg-3 col-md-6\\\" *ngIf=\\\"roleAccess\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"Region\\\">Branch</label>\\n        <ng-select\\n          [items]=\\\"branches\\\"\\n          class=\\\"text-left\\\"\\n          [closeOnSelect]=\\\"true\\\"\\n          [clearable]=\\\"true\\\"\\n          [loading]=\\\"isLoadingBranch\\\"\\n          placeholder=\\\"please select region\\\"\\n          [searchable]=\\\"false\\\"\\n          name=\\\"branches\\\"\\n          [(ngModel)]=\\\"filterTerm.branchId\\\"\\n          #Region=\\\"ngModel\\\"\\n          bindLabel=\\\"name\\\"\\n          bindValue=\\\"id\\\">\\n        </ng-select>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-lg-3 col-md-6 form-group\\\">\\n      <label for=\\\"FromDate\\\">From Date</label>\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" name=\\\"dateStart\\\" id=\\\"FromDate\\\"\\n          class=\\\"form-control\\\"\\n          [ngClass]=\\\"{ 'border-right-0': filterTerm.dateStart }\\\"\\n          readonly\\n          bsDatepicker\\n          placeholder=\\\"please select start date\\\"\\n          [(bsValue)]=\\\"filterTerm.dateStart\\\"\\n          [bsConfig]=\\\"DATEPICKER_CONFIG\\\">\\n\\n        <div class=\\\"input-group-append\\\" *ngIf=\\\"filterTerm.dateStart\\\">\\n          <span class=\\\"input-group-text bg--white\\\">\\b<i class=\\\"fa fa-times cursor-pointer\\\" (click)=\\\"filterTerm.dateStart = null\\\"></i></span>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-lg-3 col-md-6 form-group\\\">\\n      <label for=\\\"ToDate\\\">To Date</label>\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" name=\\\"dateEnd\\\" id=\\\"ToDate\\\"\\n          class=\\\"form-control\\\"\\n          [ngClass]=\\\"{ 'border-right-0': filterTerm.dateEnd }\\\"\\n          readonly\\n          bsDatepicker\\n          placeholder=\\\"please select end date\\\"\\n          [(bsValue)]=\\\"filterTerm.dateEnd\\\"\\n          [bsConfig]=\\\"DATEPICKER_CONFIG\\\">\\n\\n        <div class=\\\"input-group-append\\\" *ngIf=\\\"filterTerm.dateEnd\\\">\\n          <span class=\\\"input-group-text bg--white\\\">\\b<i class=\\\"fa fa-times cursor-pointer\\\" (click)=\\\"filterTerm.dateEnd = null\\\"></i></span>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-lg-3 col-md-6 form-group scheduler-filter__btn\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n        (click)=\\\"filterScheduler()\\\">\\n        <i class=\\\"fa fa-search mr-2\\\"></i>\\n        Filter\\n      </button>\\n    </div>\\n  </div>\\n</form>\\n\"","module.exports = \".scheduler-filter__btn {\\n  margin-top: 31px; }\\n  .scheduler-filter__btn button {\\n    width: 100px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DATEPICKER_CONFIG } from 'constants/datepicker-config';\nimport * as moment from 'moment';\nimport { Observable } from 'rxjs/Observable';\nimport { of } from 'rxjs/internal/observable/of';\nimport { Customer } from 'models/customer';\nimport { Subject } from 'rxjs/Subject';\nimport { concat } from 'rxjs/internal/observable/concat';\nimport { debounceTime } from 'rxjs/internal/operators/debounceTime';\nimport { distinctUntilChanged } from 'rxjs/internal/operators/distinctUntilChanged';\nimport { tap } from 'rxjs/internal/operators/tap';\nimport { CustomerService } from 'shared/services/customer.service';\nimport { switchMap } from 'rxjs/internal/operators/switchMap';\nimport { catchError } from 'rxjs/internal/operators/catchError';\nimport { EventEmitterService } from 'shared/utils/event-emitter.service';\nimport { EMITTER_TYPE } from 'constants/emitter';\nimport { NotifyService } from 'shared/utils/notify.service';\nimport { Branch } from 'models/branch';\nimport { RoleService } from 'app/role.service';\nimport { BranchService } from 'shared/services/branch.service';\n\n@Component({\n  selector: 'app-scheduler-filter',\n  templateUrl: './scheduler-filter.component.html',\n  styleUrls: ['./scheduler-filter.component.scss'],\n})\nexport class SchedulerFilterComponent implements OnInit {\n  public filterTerm = {\n    customer: null,\n    dateStart: null,\n    dateEnd: null,\n    branchId: null,\n  };\n  public get isEndAfterFrom(): boolean {\n    return (\n      !!this.filterTerm.dateStart &&\n      !!this.filterTerm.dateEnd &&\n      moment(this.filterTerm.dateEnd).isBefore(moment(this.filterTerm.dateStart))\n    );\n  }\n\n  public customers: Observable<Customer[]> = of([]);\n  public customerInput$ = new Subject<string>();\n\n  public DATEPICKER_CONFIG = DATEPICKER_CONFIG;\n\n  public isLoadingCusotmer = false;\n\n  // branches\n  public branches: Branch[] = [];\n  public isLoadingBranch = false;\n\n  get roleAccess(): boolean {\n    return this._role.is_admin || this._role.is_sale_director;\n  }\n\n  constructor(\n    private _customerSv: CustomerService,\n    private _emitter: EventEmitterService,\n    private _notify: NotifyService,\n    private _role: RoleService,\n    private _branchSv: BranchService,\n  ) {}\n\n  ngOnInit() {\n    this._initSearchCustomers();\n    this._getBranchList();\n  }\n\n  private _getBranchList() {\n    if (this.roleAccess) {\n      this.isLoadingBranch = true;\n      this._branchSv.getBranchList().subscribe(\n        (res) => {\n          this.branches = res.branches;\n          this.isLoadingBranch = false;\n        },\n        (errors) => {\n          this.isLoadingBranch = false;\n          this._notify.error(errors);\n        },\n      );\n    }\n  }\n\n  public filterScheduler() {\n    if (this.isEndAfterFrom) {\n      this._notify.warning('Please select the end time after the start time');\n      return;\n    }\n\n    const params: any = {};\n\n    if (this.filterTerm.dateStart) {\n      params.datestart = moment(this.filterTerm.dateStart).format('YYYY-MM-DD');\n    }\n    if (this.filterTerm.dateEnd) {\n      params.dateend = moment(this.filterTerm.dateEnd).format('YYYY-MM-DD');\n    }\n    if (this.filterTerm.customer) {\n      params.customerId = this.filterTerm.customer.id;\n    }\n    if (this.filterTerm.branchId) {\n      params.branchId = this.filterTerm.branchId;\n    }\n\n    this._emitter.publishData({\n      type: EMITTER_TYPE.FILTER_SALE_ACTIVITY,\n      params,\n    });\n  }\n\n  private _initSearchCustomers() {\n    this._customerSv\n      .filterCustomers({\n        page: 0,\n        size: 100,\n        sort: 'asc',\n        column: 'id',\n      })\n      .subscribe((res) => {\n        this._searchCustomers(res.customerList);\n      });\n  }\n\n  private _searchCustomers(customers: Customer[]) {\n    this.customers = concat(\n      of(customers), // default items\n      this.customerInput$.pipe(\n        debounceTime(200),\n        distinctUntilChanged(),\n        tap(() => (this.isLoadingCusotmer = true)),\n        switchMap((term) =>\n          this._customerSv\n            .filterCustomers({\n              page: 0,\n              size: 100,\n              sort: 'asc',\n              column: 'id',\n              txtSearch: term || '',\n            })\n            .map((res) => res.customerList)\n            .pipe(\n              catchError(() => of([])), // empty list on error\n              tap(() => (this.isLoadingCusotmer = false)),\n            ),\n        ),\n      ),\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SchedulerFilterComponent } from './scheduler-filter.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { FormsModule } from '@angular/forms';\n\nimport { NgSelectModule } from '@ng-select/ng-select';\nconst routes: Routes = [\n  {\n    path: '',\n    component: SchedulerFilterComponent,\n  },\n];\n@NgModule({\n  imports: [CommonModule, FormsModule, RouterModule.forChild(routes), BsDatepickerModule.forRoot(), NgSelectModule],\n  declarations: [SchedulerFilterComponent],\n})\nexport class SchedulerFilterModule {}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { Branch } from 'models/branch';\nimport { Township } from 'models/township';\nimport { District } from 'models/district';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BranchService {\n  constructor(private _api: ApiService) {}\n\n  public getBranchList(opts?: any) {\n    return this._api.get(`branch`, opts).map((res) => {\n      res.data.branches = res.data.branches.map((item) => new Branch().deserialize(item));\n      return res.data;\n    });\n  }\n\n  public getDistrictList(opts?: any) {\n    return this._api.get(`district`, opts).map((res) => {\n      res.data.districts = res.data.districts.map((item) => new District().deserialize(item));\n      return res.data;\n    });\n  }\n\n  public getTownshipList(opts?: any) {\n    return this._api.get('township', opts).map((res) => {\n      res.data.townships = res.data.townships.map((item) => new Township().deserialize(item));\n\n      return res.data;\n    });\n  }\n}\n"],"sourceRoot":""}