{"version":3,"sources":["webpack:///./src/app/ssm/policy/policy-manage-folder/policy-manage-folder.component.html","webpack:///./src/app/ssm/policy/policy-manage-folder/policy-manage-folder.component.scss","webpack:///./src/app/ssm/policy/policy-manage-folder/policy-manage-folder.component.ts","webpack:///./src/app/ssm/policy/policy-manage-folder/policy-manage-folder.module.ts","webpack:///./src/app/ssm/policy/policy-modal-ce-folder/policy-modal-ce-folder.component.html","webpack:///./src/app/ssm/policy/policy-modal-ce-folder/policy-modal-ce-folder.component.scss","webpack:///./src/app/ssm/policy/policy-modal-ce-folder/policy-modal-ce-folder.component.ts","webpack:///./src/app/ssm/policy/policy-modal-ce-folder/policy-modal-ce-folder.module.ts","webpack:///./src/app/ssm/policy/policy-modal-delete-folder/policy-modal-delete-folder.component.html","webpack:///./src/app/ssm/policy/policy-modal-delete-folder/policy-modal-delete-folder.component.scss","webpack:///./src/app/ssm/policy/policy-modal-delete-folder/policy-modal-delete-folder.component.ts","webpack:///./src/app/ssm/policy/policy-modal-delete-folder/policy-modal-delete-folder.module.ts","webpack:///./src/models/folder.ts"],"names":[],"mappings":";;;;;;;;;AAAA,gnBAAgnB,eAAe,+VAA+V,+BAA+B,wJ;;;;;;;;;;;ACA7/B,sDAAsD,oBAAoB,EAAE,iEAAiE,iBAAiB,EAAE,yFAAyF,mBAAmB,EAAE,4CAA4C,uBAAuB,uBAAuB,EAAE,8CAA8C,yBAAyB,iBAAiB,gBAAgB,qBAAqB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAvb;AACiB;AACuC;AACnE;AACwB;AACtB;AAC6E;AAC1D;AACd;AAO9C;IAIE,qCACU,aAA6B,EAC7B,SAAwB,EACxB,OAAe,EACf,OAAsB;QAHtB,kBAAa,GAAb,aAAa,CAAgB;QAC7B,cAAS,GAAT,SAAS,CAAe;QACxB,YAAO,GAAP,OAAO,CAAQ;QACf,YAAO,GAAP,OAAO,CAAe;QAPzB,YAAO,GAAa,EAAE,CAAC;QACvB,cAAS,GAAG,KAAK,CAAC;IAOtB,CAAC;IAEJ,8CAAQ,GAAR;QACE,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAEM,gDAAU,GAAjB,UAAkB,MAAc;QAC9B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,qBAAqB,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5D,CAAC;IAEO,qDAAe,GAAvB;QAAA,iBAYC;QAXC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,SAAS,CACtC,UAAC,GAAG;YACF,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC;YACnB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,EACD,UAAC,MAAM;YACL,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC3B,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CACF,CAAC;IACJ,CAAC;IAEM,kDAAY,GAAnB;QACE,IAAM,MAAM,GAAiB;YAC3B,YAAY,EAAE;gBACZ,MAAM,EAAE,IAAI,oDAAM,EAAE;aACrB;SACF,CAAC;QACF,IAAI,CAAC,UAAU,CAAC,qHAA4B,EAAE,MAAM,CAAC,CAAC;IACxD,CAAC;IAED,gDAAU,GAAV,UAAW,MAAc;QACvB,IAAM,MAAM,GAAiB;YAC3B,YAAY,EAAE;gBACZ,MAAM,EAAE,6CAAS,CAAC,MAAM,CAAC;aAC1B;SACF,CAAC;QACF,IAAI,CAAC,UAAU,CAAC,qHAA4B,EAAE,MAAM,CAAC,CAAC;IACxD,CAAC;IAED,kDAAY,GAAZ,UAAa,MAAc;QACzB,IAAM,MAAM,GAAiB;YAC3B,YAAY,EAAE;gBACZ,MAAM;aACP;SACF,CAAC;QACF,IAAI,CAAC,UAAU,CAAC,iIAAgC,EAAE,MAAM,CAAC,CAAC;IAC5D,CAAC;IAEO,gDAAU,GAAlB,UAAmB,IAAI,EAAE,MAAqB;QAA9C,iBASC;QARC,IAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,MAAc;YACrE,SAAS,CAAC,WAAW,EAAE,CAAC;YACxB,EAAE,CAAC,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC;gBACxB,KAAI,CAAC,eAAe,EAAE,CAAC;YACzB,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACxC,CAAC;IArEU,2BAA2B;QALvC,+DAAS,CAAC;YACT,QAAQ,EAAE,0BAA0B;;;SAGrC,CAAC;yCAMyB,kEAAc;YAClB,4EAAa;YACf,sDAAM;YACN,yEAAa;OARrB,2BAA2B,CAsEvC;IAAD,kCAAC;CAAA;AAtEuC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfC;AACM;AACgC;AACxB;AACV;AACK;AACkD;AACrC;AACiD;AAChH,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2FAA2B;KACvC;CACF,CAAC;AAaF;IAAA;IAAuC,CAAC;IAA3B,wBAAwB;QAZpC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC7B,+DAAW,CAAC,OAAO,EAAE;gBACrB,+GAAyB;gBACzB,2HAA6B;aAC9B;YACD,YAAY,EAAE,CAAC,2FAA2B,CAAC;YAC3C,SAAS,EAAE,CAAC,4EAAa,CAAC;SAC3B,CAAC;OACW,wBAAwB,CAAG;IAAD,+BAAC;CAAA;AAAH;;;;;;;;;;;;AC3BrC,8EAA8E,mCAAmC,mdAAmd,MAAM,oKAAoK,sDAAsD,y3B;;;;;;;;;;;ACApyB,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAEe;AACL;AACG;AAO/D;IAIE,sCACU,WAAuB,EACvB,aAA6B,EAC7B,OAAsB,EACtB,SAAwB;QAHxB,gBAAW,GAAX,WAAW,CAAY;QACvB,kBAAa,GAAb,aAAa,CAAgB;QAC7B,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAe;QAN3B,cAAS,GAAG,KAAK,CAAC;IAOtB,CAAC;IAEJ,+CAAQ,GAAR,cAAY,CAAC;IAEb,2DAAoB,GAApB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAEO,oDAAa,GAArB;QAAA,iBAYC;QAXC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,SAAS,CACzD,UAAC,GAAG;YACF,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YACrB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;QAChD,CAAC,EACD,UAAC,MAAM;YACL,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CACF,CAAC;IACJ,CAAC;IAEO,oDAAa,GAArB;QAAA,iBAYC;QAXC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,SAAS,CACzE,UAAC,GAAG;YACF,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YACrB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;QAChD,CAAC,EACD,UAAC,MAAM;YACL,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,CACF,CAAC;IACJ,CAAC;IAEM,4CAAK,GAAZ,UAAa,MAAe;QAC1B,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IArDU,4BAA4B;QALxC,+DAAS,CAAC;YACT,QAAQ,EAAE,4BAA4B;;;SAGvC,CAAC;yCAMuB,8DAAU;YACR,kEAAc;YACpB,yEAAa;YACX,4EAAa;OARvB,4BAA4B,CAsDxC;IAAD,mCAAC;CAAA;AAtDwC;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACM;AACmC;AACrC;AAQ7C;IAAA;IAAwC,CAAC;IAA5B,yBAAyB;QANrC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,EAAE,0DAAW,CAAC;YACpC,YAAY,EAAE,CAAC,8FAA4B,CAAC;YAC5C,eAAe,EAAE,CAAC,8FAA4B,CAAC;YAC/C,OAAO,EAAE,CAAC,8FAA4B,CAAC;SACxC,CAAC;OACW,yBAAyB,CAAG;IAAD,gCAAC;CAAA;AAAH;;;;;;;;;;;;ACXtC,8pB;;;;;;;;;;;ACAA,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAGe;AACL;AAEG;AAO/D;IAIE,0CACU,WAAuB,EACvB,aAA6B,EAC7B,SAAwB,EACxB,OAAsB;QAHtB,gBAAW,GAAX,WAAW,CAAY;QACvB,kBAAa,GAAb,aAAa,CAAgB;QAC7B,cAAS,GAAT,SAAS,CAAe;QACxB,YAAO,GAAP,OAAO,CAAe;QAPzB,cAAS,GAAG,KAAK,CAAC;IAQtB,CAAC;IAEJ,mDAAQ,GAAR,cAAY,CAAC;IAEN,uDAAY,GAAnB;QAAA,iBAcC;QAbC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAEtB,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,SAAS,CACnD,UAAC,GAAG;YACF,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;YAC/C,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YACrB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACzB,CAAC,EACD,UAAC,MAAM;YACL,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC7B,CAAC,CACF,CAAC;IACJ,CAAC;IAEM,gDAAK,GAAZ,UAAa,MAAe;QAC1B,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;IAC1B,CAAC;IAhCU,gCAAgC;QAL5C,+DAAS,CAAC;YACT,QAAQ,EAAE,gCAAgC;;;SAG3C,CAAC;yCAMuB,8DAAU;YACR,kEAAc;YAClB,4EAAa;YACf,yEAAa;OARrB,gCAAgC,CAiC5C;IAAD,uCAAC;CAAA;AAjC4C;;;;;;;;;;;;;;;;;;;;;;;;ACbJ;AACM;AAC2C;AAQ1F;IAAA;IAA4C,CAAC;IAAhC,6BAA6B;QANzC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC;YACvB,YAAY,EAAE,CAAC,sGAAgC,CAAC;YAChD,eAAe,EAAE,CAAC,sGAAgC,CAAC;YACnD,OAAO,EAAE,CAAC,sGAAgC,CAAC;SAC5C,CAAC;OACW,6BAA6B,CAAG;IAAD,oCAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;ACVmB;AAM7D;IAA4B,0BAAS;IAGnC;eACE,iBAAO;IACT,CAAC;IAED,4BAAW,GAAX,UAAY,KAA+B;QACzC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACX,MAAM,CAAC;QACT,CAAC;QACD,iBAAM,WAAW,YAAC,KAAK,CAAC,CAAC;QACzB,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC3B,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAEM,uBAAM,GAAb;QACE,MAAM,CAAC;YACL,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB,CAAC;IACJ,CAAC;IACH,aAAC;AAAD,CAAC,CArB2B,qDAAS,GAqBpC","file":"policy-manage-folder-policy-manage-folder-module.c55fb68a08bdce8bb867.js","sourcesContent":["module.exports = \"<div class=\\\"my-4\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n    (click)=\\\"createFolder()\\\">\\n    Create\\n    <i *ngIf=\\\"isLoading\\\" class=\\\"fa fa-refresh fa-spin\\\"></i>\\n  </button>\\n</div>\\n\\n<div>\\n  <table class=\\\"table table-hover folder-table\\\">\\n    <thead>\\n      <tr>\\n        <th scope=\\\"col\\\">Folder Name</th>\\n        <th scope=\\\"col\\\"></th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let folder of folders\\\">\\n        <td class=\\\"text-ellipsis folder-name\\\" (click)=\\\"showFolder(folder)\\\">\\n          <i class=\\\"far fa-folder-open fa-2x mr-2\\\"></i>\\n          {{ folder.name }}\\n        </td>\\n        <td>\\n          <button type=\\\"button\\\" class=\\\"mr-1 btn btn-info\\\" (click)=\\\"editFolder(folder)\\\"><i class=\\\"fa fa-edit\\\"></i></button>\\n          <button type=\\\"button\\\" class=\\\"mr-1 btn btn-danger\\\" (click)=\\\"removeFolder(folder)\\\"><i class=\\\"fa fa-trash\\\"></i></button>\\n        </td>\\n      </tr>\\n      <tr [ngClass]=\\\"{ 'hidden': folders.length > 0 }\\\">\\n          <td colspan=\\\"2\\\" class=\\\"text-center\\\">\\n            Data not found\\n          </td>\\n        </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\"","module.exports = \".folder-table.table tbody tr:hover {\\n  cursor: pointer; }\\n\\n.folder-table.table thead th,\\n.folder-table.table tbody td {\\n  max-width: 0; }\\n\\n.folder-table.table thead th:last-child,\\n  .folder-table.table tbody td:last-child {\\n    width: 120px; }\\n\\n.folder-table.table tbody .folder-name {\\n  position: relative;\\n  padding-left: 60px; }\\n\\n.folder-table.table tbody .folder-name i {\\n    position: absolute;\\n    left: 10px;\\n    top: 15px;\\n    color: #c3bc4a; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ModalOptions, BsModalService } from 'ngx-bootstrap/modal';\nimport { PolicyModalCeFolderComponent } from '../policy-modal-ce-folder/policy-modal-ce-folder.component';\nimport { Folder } from 'models/folder';\nimport { FolderService } from 'shared/services/folder.service';\nimport { Router } from '@angular/router';\nimport { PolicyModalDeleteFolderComponent } from '../policy-modal-delete-folder/policy-modal-delete-folder.component';\nimport { NotifyService } from 'shared/utils/notify.service';\nimport * as cloneDeep from 'lodash/cloneDeep';\n\n@Component({\n  selector: 'app-policy-manage-folder',\n  templateUrl: './policy-manage-folder.component.html',\n  styleUrls: ['./policy-manage-folder.component.scss'],\n})\nexport class PolicyManageFolderComponent implements OnInit {\n  public folders: Folder[] = [];\n  public isLoading = false;\n\n  constructor(\n    private _modalService: BsModalService,\n    private _folderSv: FolderService,\n    private _router: Router,\n    private _notify: NotifyService,\n  ) {}\n\n  ngOnInit() {\n    this._getListFolders();\n  }\n\n  public showFolder(folder: Folder) {\n    this._router.navigate(['/ssm/policy/folders', folder.id]);\n  }\n\n  private _getListFolders() {\n    this.isLoading = true;\n    this._folderSv.getListFolder().subscribe(\n      (res) => {\n        this.folders = res;\n        this.isLoading = false;\n      },\n      (errors) => {\n        this._notify.error(errors);\n        this.isLoading = false;\n      },\n    );\n  }\n\n  public createFolder() {\n    const config: ModalOptions = {\n      initialState: {\n        folder: new Folder(),\n      },\n    };\n    this._openModal(PolicyModalCeFolderComponent, config);\n  }\n\n  editFolder(folder: Folder) {\n    const config: ModalOptions = {\n      initialState: {\n        folder: cloneDeep(folder),\n      },\n    };\n    this._openModal(PolicyModalCeFolderComponent, config);\n  }\n\n  removeFolder(folder: Folder) {\n    const config: ModalOptions = {\n      initialState: {\n        folder,\n      },\n    };\n    this._openModal(PolicyModalDeleteFolderComponent, config);\n  }\n\n  private _openModal(comp, config?: ModalOptions) {\n    const subscribe = this._modalService.onHidden.subscribe((reason: string) => {\n      subscribe.unsubscribe();\n      if (reason === 'reload') {\n        this._getListFolders();\n      }\n    });\n\n    this._modalService.show(comp, config);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PolicyManageFolderComponent } from './policy-manage-folder.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { PolicyModalCeFolderModule } from '../policy-modal-ce-folder/policy-modal-ce-folder.module';\nimport { FolderService } from 'shared/services/folder.service';\nimport { PolicyModalFolderDeleteModule } from '../policy-modal-delete-folder/policy-modal-delete-folder.module';\nconst routes: Routes = [\n  {\n    path: '',\n    component: PolicyManageFolderComponent,\n  },\n];\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild(routes),\n    ModalModule.forRoot(),\n    PolicyModalCeFolderModule,\n    PolicyModalFolderDeleteModule,\n  ],\n  declarations: [PolicyManageFolderComponent],\n  providers: [FolderService],\n})\nexport class PolicyManageFolderModule {}\n","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h5 class=\\\"modal-title\\\">{{ folder.id ? 'Update' : 'Create' }} Folder</h5>\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"close()\\\">\\n    <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n  </button>\\n</div>\\n\\n<div class=\\\"modal-body customer-edit\\\">\\n  <form #FolderForm=\\\"ngForm\\\" autocomplete=\\\"off\\\" novalidate>\\n    <div class=\\\"row mb-4\\\">\\n      <div class=\\\"col-12\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"folderName\\\">Folder Name <i class=\\\"required\\\">&#40;*&#41;</i></label>\\n          <input type=\\\"text\\\" id=\\\"folderName\\\"\\n            autocomplete=\\\"new-name\\\"\\n            class=\\\"form-control\\\"\\n            [ngClass]=\\\"{ 'is-invalid': FolderName.dirty && FolderName.errors }\\\"\\n            name=\\\"folderName\\\"\\n            #FolderName=\\\"ngModel\\\"\\n            required\\n            placeholder=\\\"please enter name\\\"\\n            [(ngModel)]=\\\"folder.name\\\">\\n\\n          <div class=\\\"invalid-feedback\\\"\\n            *ngIf=\\\"FolderName.errors?.required\\\">\\n            Please enter folder's name\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 text-center\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary w-25 mr-2\\\" (click)=\\\"close()\\\">Cancel</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary w-25 ml-2\\\"\\n          (click)=\\\"createOrUpdateFolder()\\\"\\n          [disabled]=\\\"isLoading || FolderForm.form.invalid\\\">\\n          OK\\n          <i *ngIf=\\\"isLoading\\\" class=\\\"fa fa-refresh fa-spin\\\"></i>\\n        </button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Folder } from 'models/folder';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { NotifyService } from 'shared/utils/notify.service';\nimport { FolderService } from 'shared/services/folder.service';\n\n@Component({\n  selector: 'app-policy-modal-ce-folder',\n  templateUrl: './policy-modal-ce-folder.component.html',\n  styleUrls: ['./policy-modal-ce-folder.component.scss'],\n})\nexport class PolicyModalCeFolderComponent implements OnInit {\n  public folder: Folder;\n  public isLoading = false;\n\n  constructor(\n    private _bsModalRef: BsModalRef,\n    private _modalService: BsModalService,\n    private _notify: NotifyService,\n    private _folderSv: FolderService,\n  ) {}\n\n  ngOnInit() {}\n\n  createOrUpdateFolder() {\n    if (this.folder.id) {\n      this._updateFolder();\n      return;\n    }\n\n    this._createFolder();\n  }\n\n  private _createFolder() {\n    this.isLoading = true;\n    this._folderSv.createFolder(this.folder.toJSON()).subscribe(\n      (res) => {\n        this.close('reload');\n        this.isLoading = false;\n        this._notify.success('create folder success');\n      },\n      (errors) => {\n        this.isLoading = false;\n      },\n    );\n  }\n\n  private _updateFolder() {\n    this.isLoading = true;\n    this._folderSv.updateFolder(this.folder.id, this.folder.toJSON()).subscribe(\n      (res) => {\n        this.close('reload');\n        this.isLoading = false;\n        this._notify.success('update folder success');\n      },\n      (errors) => {\n        this.isLoading = false;\n      },\n    );\n  }\n\n  public close(reason?: string) {\n    this._modalService.setDismissReason(reason);\n    this._bsModalRef.hide();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PolicyModalCeFolderComponent } from './policy-modal-ce-folder.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  declarations: [PolicyModalCeFolderComponent],\n  entryComponents: [PolicyModalCeFolderComponent],\n  exports: [PolicyModalCeFolderComponent],\n})\nexport class PolicyModalCeFolderModule {}\n","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h5 class=\\\"modal-title\\\">Do you want to delete?</h5>\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"close()\\\">\\n    <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n  </button>\\n</div>\\n\\n<div class=\\\"modal-body\\\">\\n  <div class=\\\"text-center\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary w-25 mr-2\\\" (click)=\\\"close()\\\">Cancel</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary w-25 ml-2\\\" (click)=\\\"removeFolder()\\\"\\n    [disabled]=\\\"isLoading\\\">\\n    OK\\n    <i *ngIf=\\\"isLoading\\\" class=\\\"fa fa-refresh fa-spin\\\"></i>\\n  </button>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Policy } from 'models/policy';\nimport { PolicyService } from 'shared/services/policy.service';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { NotifyService } from 'shared/utils/notify.service';\nimport { Folder } from 'models/folder';\nimport { FolderService } from 'shared/services/folder.service';\n\n@Component({\n  selector: 'app-policy-modal-delete-folder',\n  templateUrl: './policy-modal-delete-folder.component.html',\n  styleUrls: ['./policy-modal-delete-folder.component.scss'],\n})\nexport class PolicyModalDeleteFolderComponent implements OnInit {\n  public isLoading = false;\n  public folder: Folder;\n\n  constructor(\n    private _bsModalRef: BsModalRef,\n    private _modalService: BsModalService,\n    private _folderSv: FolderService,\n    private _notify: NotifyService,\n  ) {}\n\n  ngOnInit() {}\n\n  public removeFolder() {\n    this.isLoading = true;\n\n    this._folderSv.deleteFolder(this.folder.id).subscribe(\n      (res) => {\n        this._notify.success('delete folder successs');\n        this.close('reload');\n        this.isLoading = false;\n      },\n      (errors) => {\n        this.isLoading = false;\n        this._notify.error(errors);\n      },\n    );\n  }\n\n  public close(reason?: string) {\n    this._modalService.setDismissReason(reason);\n    this._bsModalRef.hide();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PolicyModalDeleteFolderComponent } from './policy-modal-delete-folder.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PolicyModalDeleteFolderComponent],\n  entryComponents: [PolicyModalDeleteFolderComponent],\n  exports: [PolicyModalDeleteFolderComponent],\n})\nexport class PolicyModalFolderDeleteModule {}\n","import { BaseModelInterface, BaseModel } from './base.model';\nimport { Deserializable } from 'shared/interfaces/deserializable';\n\ninterface FolderInterface extends BaseModelInterface {\n  name: string;\n}\nexport class Folder extends BaseModel implements Deserializable<Folder> {\n  name: string;\n\n  constructor() {\n    super();\n  }\n\n  deserialize(input: Partial<FolderInterface>): Folder {\n    if (!input) {\n      return;\n    }\n    super.deserialize(input);\n    Object.assign(this, input);\n    return this;\n  }\n\n  public toJSON() {\n    return {\n      name: this.name,\n    };\n  }\n}\n"],"sourceRoot":""}