{"version":3,"sources":["webpack:///./src/app/ccm/ccm.service.ts","webpack:///./src/constants/care-activity.ts","webpack:///./src/models/customer-care-activity.ts","webpack:///./src/shared/services/care-activity.service.ts"],"names":[],"mappings":"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","file":"ccm-ccm-module~ccm-filter-ccm-filter-module.9b7834dfe022f6188512.js","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CcmService {\n  private _date: string;\n  public get date(): string {\n    return this._date;\n  }\n  public set date(v: string) {\n    this._date = v;\n  }\n\n  constructor() {}\n}\n","export const CARE_ACTIVITY_STATUSES = [\n  {\n    value: 'ON_GOING',\n    name: 'On Going',\n  },\n  {\n    value: 'COMPLETED',\n    name: 'Completed',\n  },\n];\n\nexport const CARE_ACTIVITY_STATUSES_TEXT = {\n  ON_GOING: 'On Going',\n  COMPLETED: 'Completed',\n};\n","import { Customer } from './customer';\nimport * as moment from 'moment';\nimport { CARE_ACTIVITY_STATUSES_TEXT } from 'constants/care-activity';\nimport { User } from './user';\nimport { BaseModelInterface, BaseModel } from './base.model';\nimport { Deserializable } from 'shared/interfaces/deserializable';\n\ninterface CustomerCareActivityInterface extends BaseModelInterface {\n  customer: Customer;\n  assignedStaff: User;\n  date: any;\n  dateBinding: Date;\n  reason: string;\n  type: string;\n  status: string;\n  giftPrice: string;\n  dateActivity: string;\n  dateActivityFormat: string;\n  assignedStaffId: number;\n}\n\nexport class CustomerCareActivity extends BaseModel implements Deserializable<CustomerCareActivity> {\n  customer: Customer;\n  get customerName(): string {\n    return this.customer ? this.customer.customerName : null;\n  }\n  get customerAddress(): string {\n    return this.customer ? this.customer.address : null;\n  }\n  get customerContactName(): string {\n    return this.customer ? this.customer.contactName : null;\n  }\n  get customerPosition(): string {\n    return this.customer ? this.customer.position : null;\n  }\n\n  assignedStaff: User;\n\n  public get staffName(): string {\n    return this.assignedStaff ? this.assignedStaff.fullName : null;\n  }\n\n  date: any;\n  get date_str(): string {\n    return moment(this.date).toISOString();\n  }\n  get dateDisplay(): string {\n    return moment(this.date).format('YYYY-MM-DD');\n  }\n\n  private _dateBinding: Date;\n  public get dateBinding(): Date {\n    return this._dateBinding;\n  }\n  public set dateBinding(v: Date) {\n    this._dateBinding = v;\n  }\n\n  reason: string;\n  type: string;\n\n  status: string;\n  public get statusStr(): string {\n    return this.status ? CARE_ACTIVITY_STATUSES_TEXT[this.status] : null;\n  }\n\n  private _giftPrice: string;\n  public get giftPrice(): string {\n    return this._giftPrice || '0';\n  }\n  public set giftPrice(v: string) {\n    this._giftPrice = v;\n  }\n\n  dateActivityFormat: string;\n\n  constructor() {\n    super();\n\n    this.date = new Date();\n    this.dateBinding = new Date();\n    this.assignedStaff = new User();\n  }\n\n  deserialize(input: Partial<CustomerCareActivityInterface>): CustomerCareActivity {\n    if (!input) {\n      return;\n    }\n    super.deserialize(input);\n    Object.assign(this, input);\n\n    if (input.dateActivity) {\n      this.date = input.dateActivity;\n      this.dateBinding = new Date(input.dateActivity);\n    }\n\n    this.customer = input.customer instanceof Customer ? input.customer : new Customer().deserialize(input.customer);\n    this.assignedStaff =\n      input.assignedStaff instanceof User ? input.assignedStaff : new User().deserialize(input.assignedStaff);\n\n    this.giftPrice = (+input.giftPrice).format();\n    return this;\n  }\n\n  public toJSON() {\n    return {\n      customerId: this.customer ? this.customer.id : null,\n      dateActivity: this.date_str,\n      type: this.type || null,\n      reason: this.reason || null,\n      giftPrice: this.giftPrice.toNumber() || 0,\n      status: this.status || null,\n      assignedStaffId: this.assignedStaff ? this.assignedStaff.id : null,\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { CustomerCareActivity } from 'models/customer-care-activity';\nimport { DownloadService } from './download.service';\nimport { RootScopeService } from 'app/services/root-scope.service';\nimport { RoleService } from 'app/role.service';\nimport { Roles } from 'app/guard/roles';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CareActivityService {\n  constructor(\n    private _api: ApiService,\n    private _download: DownloadService,\n    private _rootScope: RootScopeService,\n    private _role: RoleService,\n  ) {}\n\n  public filterActivities(opts: any = {}) {\n    const _opts: any = {\n      role: this._rootScope.currentUser.id ? this._rootScope.currentUser.role : Roles.MYTEL_ADMIN,\n    };\n\n    if (this._role.is_branch_director) {\n      _opts.branchId =\n        this._rootScope.currentUser.id && this._rootScope.currentUser.branchId\n          ? this._rootScope.currentUser.branchId\n          : 0;\n    }\n\n    if (this._role.is_hq_sale_staff || this._role.is_branch_sale_staff) {\n      _opts.assignedStaffId = this._rootScope.currentUser.id ? this._rootScope.currentUser.id : 0;\n    }\n\n    return this._api.get(`care-activity`, { ..._opts, ...opts }).map((res) => {\n      res.data.customerCareActivityList = res.data.customerCareActivityList.map((item) =>\n        new CustomerCareActivity().deserialize(item),\n      );\n      return res.data;\n    });\n  }\n\n  public createCareActivity(data: any) {\n    return this._api.post(`care-activity`, data);\n  }\n\n  public updateCareActivity(id: number, data: any) {\n    return this._api.put(`care-activity/${id}`, data);\n  }\n\n  public removeCareActivity(id: number) {\n    return this._api.delete(`care-activity/${id}`);\n  }\n\n  public exportCCM(opts: any = {}) {\n    const _opts: any = {\n      role: this._rootScope.currentUser.id ? this._rootScope.currentUser.role : Roles.MYTEL_ADMIN,\n    };\n\n    if (this._role.is_branch_director) {\n      _opts.branchId =\n        this._rootScope.currentUser.id && this._rootScope.currentUser.branchId\n          ? this._rootScope.currentUser.branchId\n          : 0;\n    }\n\n    if (this._role.is_hq_sale_staff || this._role.is_branch_sale_staff) {\n      _opts.assignedStaffId = this._rootScope.currentUser.id ? this._rootScope.currentUser.id : 0;\n    }\n\n    return this._download.get(`care-activity/export`, { ..._opts, ...opts });\n  }\n}\n"],"sourceRoot":""}