{"version":3,"sources":["webpack:///./src/app/dbr/dashboard/dbr-dashboard-filter/dbr-dashboard-filter.component.html","webpack:///./src/app/dbr/dashboard/dbr-dashboard-filter/dbr-dashboard-filter.component.scss","webpack:///./src/app/dbr/dashboard/dbr-dashboard-filter/dbr-dashboard-filter.component.ts","webpack:///./src/app/dbr/dashboard/dbr-dashboard-filter/dbr-dashboard-filter.module.ts","webpack:///./src/app/dbr/dashboard/dbr-dashboard/dbr-dashboard.component.html","webpack:///./src/app/dbr/dashboard/dbr-dashboard/dbr-dashboard.component.scss","webpack:///./src/app/dbr/dashboard/dbr-dashboard/dbr-dashboard.component.ts","webpack:///./src/app/dbr/dashboard/dbr-dashboard/dbr-dashboard.module.ts","webpack:///./src/constants/emitter.ts","webpack:///./src/models/branch.ts","webpack:///./src/models/district.ts","webpack:///./src/models/township.ts","webpack:///./src/shared/services/branch.service.ts","webpack:///./src/shared/services/dashboard.service.ts","webpack:///./src/shared/services/staff.service.ts"],"names":[],"mappings":"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","file":"dashboard-dbr-dashboard-dbr-dashboard-module.7c9cd096f29d53e81852.js","sourcesContent":["module.exports = \"<form novalidate>\\n  <div class=\\\"row mb-4 customer-form-content\\\">\\n    <div class=\\\"col-lg-3 col-md-6 form-group\\\">\\n      <label>Sale Staff</label>\\n      <ng-select\\n        [items]=\\\"staffs\\\"\\n        class=\\\"text-left\\\"\\n        [closeOnSelect]=\\\"true\\\"\\n        [clearable]=\\\"true\\\"\\n        [loading]=\\\"isLoadingStaff\\\"\\n        placeholder=\\\"please select staff\\\"\\n        [searchable]=\\\"true\\\"\\n        name=\\\"staff\\\"\\n        [(ngModel)]=\\\"filterTerm.saleSatff\\\"\\n        bindLabel=\\\"code_full_name\\\">\\n      </ng-select>\\n    </div>\\n\\n    <div class=\\\"col-lg-3 col-md-6\\\" *ngIf=\\\"roleAccess\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"Region\\\">Branch</label>\\n        <ng-select\\n          [items]=\\\"branches\\\"\\n          class=\\\"text-left\\\"\\n          [closeOnSelect]=\\\"true\\\"\\n          [clearable]=\\\"true\\\"\\n          [loading]=\\\"isLoadingBranch\\\"\\n          placeholder=\\\"please select region\\\"\\n          [searchable]=\\\"false\\\"\\n          name=\\\"branches\\\"\\n          [(ngModel)]=\\\"filterTerm.branchId\\\"\\n          #Region=\\\"ngModel\\\"\\n          bindLabel=\\\"name\\\"\\n          bindValue=\\\"id\\\">\\n        </ng-select>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-lg-3 col-md-6 form-group\\\">\\n      <label for=\\\"FromDate\\\">From Date</label>\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" name=\\\"dateFrom\\\" id=\\\"FromDate\\\"\\n          class=\\\"form-control\\\"\\n          [ngClass]=\\\"{ 'border-right-0': filterTerm.dateFrom }\\\"\\n          readonly\\n          placeholder=\\\"please select date from\\\"\\n          bsDatepicker\\n          [(bsValue)]=\\\"filterTerm.dateFrom\\\"\\n          [bsConfig]=\\\"DATEPICKER_CONFIG\\\">\\n\\n        <div class=\\\"input-group-append\\\" *ngIf=\\\"filterTerm.dateFrom\\\">\\n          <span class=\\\"input-group-text bg--white\\\">\\b<i class=\\\"fa fa-times cursor-pointer\\\" (click)=\\\"filterTerm.dateFrom = null\\\"></i></span>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-lg-3 col-md-6 form-group\\\">\\n      <label for=\\\"ToDate\\\">To Date</label>\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" name=\\\"dateTo\\\" id=\\\"ToDate\\\"\\n          class=\\\"form-control\\\"\\n          [ngClass]=\\\"{ 'border-right-0': filterTerm.dateTo }\\\"\\n          readonly\\n          placeholder=\\\"please select date to\\\"\\n          bsDatepicker\\n          [(bsValue)]=\\\"filterTerm.dateTo\\\"\\n          [bsConfig]=\\\"DATEPICKER_CONFIG\\\">\\n\\n        <div class=\\\"input-group-append\\\" *ngIf=\\\"filterTerm.dateTo\\\">\\n          <span class=\\\"input-group-text bg--white\\\">\\b<i class=\\\"fa fa-times cursor-pointer\\\" (click)=\\\"filterTerm.dateTo = null\\\"></i></span>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-lg-3 col-md-6 form-group dashboard-filter__btn\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n      (click)=\\\"filterDashboard()\\\">\\n        <i class=\\\"fa fa-search mr-2\\\"></i>\\n        Filter\\n      </button>\\n    </div>\\n  </div>\\n\\n</form>\\n\"","module.exports = \".dashboard-filter__btn {\\n  margin-top: 31px; }\\n  .dashboard-filter__btn button {\\n    width: 100px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NotifyService } from 'shared/utils/notify.service';\nimport { EventEmitterService } from 'shared/utils/event-emitter.service';\nimport { EMITTER_TYPE } from 'constants/emitter';\nimport { DATEPICKER_CONFIG } from 'constants/datepicker-config';\nimport * as moment from 'moment';\nimport { User } from 'models/user';\nimport { UserService } from 'shared/services/user.service';\nimport { Branch } from 'models/branch';\nimport { RoleService } from 'app/role.service';\nimport { BranchService } from 'shared/services/branch.service';\n\n@Component({\n  selector: 'app-dbr-dashboard-filter',\n  templateUrl: './dbr-dashboard-filter.component.html',\n  styleUrls: ['./dbr-dashboard-filter.component.scss'],\n})\nexport class DbrDashboardFilterComponent implements OnInit {\n  public DATEPICKER_CONFIG = DATEPICKER_CONFIG;\n\n  public filterTerm: any = {\n    saleSatff: null,\n    dateFrom: null,\n    dateTo: null,\n    branchId: null,\n  };\n  public get isEndAfterFrom(): boolean {\n    return (\n      !!this.filterTerm.dateFrom &&\n      !!this.filterTerm.dateTo &&\n      moment(this.filterTerm.dateTo).isBefore(moment(this.filterTerm.dateFrom))\n    );\n  }\n\n  public staffs: User[] = [];\n  public isLoadingStaff = false;\n\n  // branches\n  public branches: Branch[] = [];\n  public isLoadingBranch = false;\n\n  get roleAccess(): boolean {\n    return this.role.is_admin || this.role.is_sale_director;\n  }\n\n  constructor(\n    private _notify: NotifyService,\n    private _emitter: EventEmitterService,\n    private _userSv: UserService,\n    public role: RoleService,\n    private _branchSv: BranchService,\n  ) {}\n\n  ngOnInit() {\n    this._getStaffs();\n    this._getBranchList();\n  }\n\n  private _getBranchList() {\n    if (this.roleAccess) {\n      this.isLoadingBranch = true;\n      this._branchSv.getBranchList().subscribe(\n        (res) => {\n          this.branches = res.branches;\n          this.isLoadingBranch = false;\n        },\n        (errors) => {\n          this.isLoadingBranch = false;\n          this._notify.error(errors);\n        },\n      );\n    }\n  }\n\n  private _getStaffs() {\n    this.isLoadingStaff = true;\n\n    this._userSv.getAllUsers().subscribe(\n      (res) => {\n        this.staffs = res;\n        this.isLoadingStaff = false;\n      },\n      (errors) => {\n        this.isLoadingStaff = false;\n        this._notify.error(errors);\n      },\n    );\n  }\n\n  public filterDashboard() {\n    if (this.isEndAfterFrom) {\n      this._notify.warning('Please select the end time after the start time');\n      return;\n    }\n\n    const params: any = {};\n\n    if (this.filterTerm.saleSatff) {\n      params.assignedStaffId = this.filterTerm.saleSatff.id;\n    }\n    if (this.filterTerm.dateFrom) {\n      params.dateFrom = moment(this.filterTerm.dateFrom).format('MM/DD/YYYY');\n    }\n    if (this.filterTerm.dateTo) {\n      params.dateTo = moment(this.filterTerm.dateTo).format('MM/DD/YYYY');\n    }\n    if (this.filterTerm.branchId) {\n      params.branchId = this.filterTerm.branchId;\n    }\n\n    this._emitter.publishData({\n      type: EMITTER_TYPE.FILTER_DASHBOARD,\n      params,\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DbrDashboardFilterComponent } from './dbr-dashboard-filter.component';\nimport { StaffService } from 'shared/services/staff.service';\nimport { FormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { UserService } from 'shared/services/user.service';\n\n@NgModule({\n  imports: [CommonModule, NgSelectModule, FormsModule, BsDatepickerModule.forRoot()],\n  declarations: [DbrDashboardFilterComponent],\n  exports: [DbrDashboardFilterComponent],\n  providers: [StaffService, UserService],\n})\nexport class DbrDashboardFilterModule {}\n","module.exports = \"<app-dbr-dashboard-filter></app-dbr-dashboard-filter>\\n\\n<div class=\\\"row p-0 mt-2\\\">\\n  <div class=\\\"col-12 form-group\\\">\\n    <h3>Activity Type</h3>\\n  </div>\\n\\n  <div class=\\\"col-lg-3 col-md-4 col-sm-6 form-group\\\">\\n    <div class=\\\"card d-card\\\">\\n      <ul class=\\\"list-group list-group-flush\\\">\\n        <li class=\\\"list-group-item header\\\">Sent Email</li>\\n        <li class=\\\"list-group-item body\\\">\\n          <i class=\\\"fa fa-envelope fa-4x\\\"></i>\\n          <h3 class=\\\"pull-right my-3\\\">{{ dashboard?.groupTypeOfContact?.sentEmail }}</h3>\\n        </li>\\n        <li class=\\\"list-group-item footer\\\"></li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-lg-3 col-md-4 col-sm-6 form-group\\\">\\n    <div class=\\\"card d-card\\\">\\n      <ul class=\\\"list-group list-group-flush\\\">\\n        <li class=\\\"list-group-item header\\\">Called</li>\\n        <li class=\\\"list-group-item body\\\">\\n          <i class=\\\"fa fa-phone-square fa-4x\\\"></i>\\n          <h3 class=\\\"pull-right my-3\\\">{{ dashboard?.groupTypeOfContact?.called }}</h3>\\n        </li>\\n        <li class=\\\"list-group-item footer\\\"></li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-lg-3 col-md-4 col-sm-6 form-group\\\">\\n    <div class=\\\"card d-card\\\">\\n      <ul class=\\\"list-group list-group-flush\\\">\\n        <li class=\\\"list-group-item header\\\">Meeting With Customer</li>\\n        <li class=\\\"list-group-item body\\\">\\n          <i class=\\\"fa fa-comments fa-4x\\\"></i>\\n          <h3 class=\\\"pull-right my-3\\\">{{ dashboard?.groupTypeOfContact?.meetingWithCustomer }}</h3>\\n        </li>\\n        <li class=\\\"list-group-item footer\\\"></li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-lg-3 col-md-4 col-sm-6 form-group\\\">\\n    <div class=\\\"card d-card\\\">\\n      <ul class=\\\"list-group list-group-flush\\\">\\n        <li class=\\\"list-group-item header\\\">Made And Sent Quotation</li>\\n        <li class=\\\"list-group-item body\\\">\\n          <i class=\\\"fa fa-th-list fa-4x\\\"></i>\\n          <h3 class=\\\"pull-right my-3\\\">{{ dashboard?.groupTypeOfContact?.madeAndSentQuotation }}</h3>\\n        </li>\\n        <li class=\\\"list-group-item footer\\\"></li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-lg-3 col-md-4 col-sm-6 form-group\\\">\\n    <div class=\\\"card d-card\\\">\\n      <ul class=\\\"list-group list-group-flush\\\">\\n        <li class=\\\"list-group-item header\\\">Negotiate</li>\\n        <li class=\\\"list-group-item body\\\">\\n          <i class=\\\"fa fa-thumbs-up fa-4x\\\"></i>\\n          <h3 class=\\\"pull-right my-3\\\">{{ dashboard?.groupTypeOfContact?.negotiate }}</h3>\\n        </li>\\n        <li class=\\\"list-group-item footer\\\"></li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-lg-3 col-md-4 col-sm-6 form-group\\\">\\n    <div class=\\\"card d-card\\\">\\n      <ul class=\\\"list-group list-group-flush\\\">\\n        <li class=\\\"list-group-item header\\\">Signed Contract</li>\\n        <li class=\\\"list-group-item body\\\">\\n          <i class=\\\"fa fa-check-square fa-4x\\\"></i>\\n          <h3 class=\\\"pull-right my-3\\\">{{ dashboard?.groupTypeOfContact?.signedContract }}</h3>\\n        </li>\\n        <li class=\\\"list-group-item footer\\\"></li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"row p-0 mt-2\\\">\\n  <div class=\\\"col-12 form-group\\\">\\n    <h3>Customer Care Status</h3>\\n  </div>\\n\\n  <div class=\\\"col-lg-3 col-md-4 col-sm-6 form-group\\\">\\n    <div class=\\\"card d-card\\\">\\n      <ul class=\\\"list-group list-group-flush\\\">\\n        <li class=\\\"list-group-item header\\\">On going</li>\\n        <li class=\\\"list-group-item body\\\">\\n          <i class=\\\"fa fa-cogs fa-4x\\\"></i>\\n          <h3 class=\\\"pull-right my-3\\\">{{ dashboard?.groupCustomerCareStatus?.onGoing }}</h3>\\n        </li>\\n        <li class=\\\"list-group-item footer\\\"></li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-lg-3 col-md-4 col-sm-6 form-group\\\">\\n    <div class=\\\"card d-card\\\">\\n      <ul class=\\\"list-group list-group-flush\\\">\\n        <li class=\\\"list-group-item header\\\">Completed</li>\\n        <li class=\\\"list-group-item body\\\">\\n          <i class=\\\"fa fa-check fa-4x\\\"></i>\\n          <h3 class=\\\"pull-right my-3\\\">{{ dashboard?.groupCustomerCareStatus?.completed }}</h3>\\n        </li>\\n        <li class=\\\"list-group-item footer\\\"></li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","module.exports = \".card.d-card .header,\\n.card.d-card .footer {\\n  background: #149dec;\\n  color: #fff; }\\n\\n.card.d-card .body {\\n  background: #3fb2f5;\\n  color: #fff; }\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { DashboardService } from 'shared/services/dashboard.service';\nimport { NotifyService } from 'shared/utils/notify.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { EventEmitterService } from 'shared/utils/event-emitter.service';\nimport { EMITTER_TYPE } from 'constants/emitter';\n\n@Component({\n  selector: 'app-dbr-dashboard',\n  templateUrl: './dbr-dashboard.component.html',\n  styleUrls: ['./dbr-dashboard.component.scss'],\n})\nexport class DbrDashboardComponent implements OnInit, OnDestroy {\n  public dashboard: any;\n  private _subscriber: Subscription;\n  private _filterQuery: any = {};\n\n  constructor(\n    private _dashboardSv: DashboardService,\n    private _notify: NotifyService,\n    private _emitter: EventEmitterService,\n  ) {}\n\n  ngOnInit() {\n    this._getDashboard();\n    this._onEventEmitter();\n  }\n\n  ngOnDestroy() {\n    this._subscriber.unsubscribe();\n  }\n\n  private _onEventEmitter() {\n    this._subscriber = this._emitter.caseNumber$.subscribe((data) => {\n      if (data && data.type === EMITTER_TYPE.FILTER_DASHBOARD) {\n        this._filterQuery = data.params;\n        this._getDashboard();\n      }\n    });\n  }\n\n  private _getDashboard() {\n    const params = {\n      ...this._filterQuery,\n    };\n\n    this._dashboardSv.getDashboard(params).subscribe(\n      (res) => {\n        this.dashboard = res;\n      },\n      (errors) => {\n        this._notify.error(errors);\n      },\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DbrDashboardComponent } from './dbr-dashboard.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardService } from 'shared/services/dashboard.service';\nimport { DbrDashboardFilterModule } from '../dbr-dashboard-filter/dbr-dashboard-filter.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DbrDashboardComponent,\n  },\n];\n\n@NgModule({\n  imports: [CommonModule, RouterModule.forChild(routes), DbrDashboardFilterModule],\n  declarations: [DbrDashboardComponent],\n  providers: [DashboardService],\n})\nexport class DbrDashboardModule {}\n","export const EMITTER_TYPE = {\n  FILTER_CUSTOMER: 'customer:filter',\n  CREATE_CUSTOMER: 'customer:create',\n  GMAP_CLICK: 'gmap:click',\n  CREATE_SALE_ACTIVITY: 'saleActivity:create',\n  FILTER_SALE_ACTIVITY: 'saleActivity:filter',\n  REMOVE_SALE_ACTIVITY: 'saleActivity:remove',\n  UPDATE_SALE_ACTIVITY: 'saleActivity:update',\n  FILTER_POLICY: 'policy:filter',\n  CREATE_POLICY: 'policy:create',\n  CREATE_BTS: 'bts:create',\n  FILTER_BTS: 'bts:filter',\n  GMAP_DISTANCE: 'gmap:distance',\n  GMAP_BTS: 'gmap:bts',\n  GMAP_BTS_CREATE: 'gmap:bts:create',\n  FILTER_CARE_ACTIVITY: 'careActivity:filter',\n  CREATE_CARE_ACTIVITY: 'careActivity:create',\n  CREATE_QUOTATION: 'quotation:create',\n  CHANGE_CUSTOMER_QUOTATION: 'quotation:changeCustomer',\n  FILTER_QUOTATION: 'quotation:filter',\n  FILTER_PROPOSAL: 'proposal:filter',\n  FILTER_DASHBOARD: 'dashboard:filter',\n  CREATE_USER: 'user:create',\n  CREATE_SALE_ACTIVITY_2: 'saleActivity2:create',\n  FILTER_SALE_ACTIVITY_2: 'saleActivity2:filter',\n  CHANGE_FOLDER: 'folder:change',\n  GMAP_PLACE_CHANGED: 'gmap:place:changed',\n  GMAP_ZOOM_TO: 'gmap:zoomTp',\n};\n","import { BaseModelInterface, BaseModel } from './base.model';\nimport { Deserializable } from 'shared/interfaces/deserializable';\n\ninterface BranchInterface extends BaseModelInterface {\n  name: string;\n}\nexport class Branch extends BaseModel implements Deserializable<Branch> {\n  name: string;\n\n  constructor() {\n    super();\n  }\n\n  deserialize(input: Partial<BranchInterface>): Branch {\n    if (!input) {\n      return;\n    }\n    super.deserialize(input);\n    Object.assign(this, input);\n    return this;\n  }\n}\n","import { BaseModelInterface, BaseModel } from './base.model';\nimport { Deserializable } from 'shared/interfaces/deserializable';\n\ninterface DistrictInterface extends BaseModelInterface {\n  name: string;\n  branchId: number;\n}\nexport class District extends BaseModel implements Deserializable<District> {\n  name: string;\n  branchId: number;\n\n  constructor() {\n    super();\n  }\n\n  deserialize(input: Partial<DistrictInterface>): District {\n    if (!input) {\n      return;\n    }\n\n    super.deserialize(input);\n    Object.assign(this, input);\n    return this;\n  }\n}\n","import { BaseModelInterface, BaseModel } from './base.model';\nimport { Deserializable } from 'shared/interfaces/deserializable';\n\ninterface TownshipInterface extends BaseModelInterface {\n  name: string;\n  branchId: number;\n  districtId: number;\n}\nexport class Township extends BaseModel implements Deserializable<Township> {\n  name: string;\n  branchId: number;\n  districtId: number;\n\n  constructor() {\n    super();\n  }\n\n  deserialize(input: Partial<TownshipInterface>): Township {\n    if (!input) {\n      return;\n    }\n    super.deserialize(input);\n    Object.assign(this, input);\n    return this;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { Branch } from 'models/branch';\nimport { Township } from 'models/township';\nimport { District } from 'models/district';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BranchService {\n  constructor(private _api: ApiService) {}\n\n  public getBranchList(opts?: any) {\n    return this._api.get(`branch`, opts).map((res) => {\n      res.data.branches = res.data.branches.map((item) => new Branch().deserialize(item));\n      return res.data;\n    });\n  }\n\n  public getDistrictList(opts?: any) {\n    return this._api.get(`district`, opts).map((res) => {\n      res.data.districts = res.data.districts.map((item) => new District().deserialize(item));\n      return res.data;\n    });\n  }\n\n  public getTownshipList(opts?: any) {\n    return this._api.get('township', opts).map((res) => {\n      res.data.townships = res.data.townships.map((item) => new Township().deserialize(item));\n\n      return res.data;\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { RootScopeService } from 'app/services/root-scope.service';\nimport { RoleService } from 'app/role.service';\nimport { Roles } from 'app/guard/roles';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DashboardService {\n  constructor(private _api: ApiService, private _rootScope: RootScopeService, private _role: RoleService) {}\n\n  public getDashboard(opts: any = {}) {\n    const _opts: any = {\n      role: this._rootScope.currentUser.id ? this._rootScope.currentUser.role : Roles.MYTEL_ADMIN,\n    };\n\n    if (this._role.is_branch_director) {\n      _opts.branchId =\n        this._rootScope.currentUser.id && this._rootScope.currentUser.branchId\n          ? this._rootScope.currentUser.branchId\n          : 0;\n    }\n\n    if (this._role.is_hq_sale_staff || this._role.is_branch_sale_staff) {\n      _opts.assignedStaffId = this._rootScope.currentUser.id ? this._rootScope.currentUser.id : 0;\n    }\n\n    return this._api.get(`dashboard`, { ..._opts, ...opts }).map((res) => {\n      return res.data;\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { KeyCloakService } from './kc.service';\nimport { KeyCloakUser } from 'models/kc-user';\nimport { environment } from 'environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StaffService {\n  constructor(private _kc: KeyCloakService) {}\n\n  public getStaffs(params?: any) {\n    return this._kc.get(`admin/realms/${environment.kc_realm}/users`, params).map((res) => {\n      const data: KeyCloakUser[] = [];\n\n      res.map((item) => {\n        if (item.email) {\n          data.push(new KeyCloakUser().deserialize(item));\n        }\n      });\n\n      return data;\n    });\n  }\n}\n"],"sourceRoot":""}