{"version":3,"sources":["webpack:///./src/app/timeline/timeline-list/timeline-list.component.html","webpack:///./src/app/timeline/timeline-list/timeline-list.component.scss","webpack:///./src/app/timeline/timeline-list/timeline-list.component.ts","webpack:///./src/app/timeline/timeline-list/timeline-list.module.ts","webpack:///./src/app/timeline/timeline-modal-delete/timeline-modal-delete.component.html","webpack:///./src/app/timeline/timeline-modal-delete/timeline-modal-delete.component.scss","webpack:///./src/app/timeline/timeline-modal-delete/timeline-modal-delete.component.ts","webpack:///./src/app/timeline/timeline-modal-delete/timeline-modal-delete.module.ts","webpack:///./src/app/timeline/timeline-modal-edit/timeline-modal-edit.component.html","webpack:///./src/app/timeline/timeline-modal-edit/timeline-modal-edit.component.scss","webpack:///./src/app/timeline/timeline-modal-edit/timeline-modal-edit.component.ts","webpack:///./src/app/timeline/timeline-modal-edit/timeline-modal-edit.module.ts","webpack:///./src/app/timeline/timeline.component.html","webpack:///./src/app/timeline/timeline.component.scss","webpack:///./src/app/timeline/timeline.component.ts","webpack:///./src/app/timeline/timeline.module.ts","webpack:///./src/models/sale-activity.ts","webpack:///./src/shared/services/customer-classification.service.ts"],"names":[],"mappings":"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","file":"timeline-timeline-module.1fb44562af3d7d55e795.js","sourcesContent":["module.exports = \"<div class=\\\"table-responsive py-4\\\">\\n  <span>Showing {{ query.from }} to {{ query.to }} of {{ query.totalElements }} entries</span>\\n  <table class=\\\"table sale-activity-table\\\">\\n    <thead>\\n      <tr>\\n        <th>Action</th>\\n        <th class=\\\"cursor-pointer\\\" (click)=\\\"addOrder('customer_name')\\\">\\n          Customer\\n          <i class=\\\"fa {{ getClassOrder('customer_name') }}\\\"></i>\\n        </th>\\n        <th class=\\\"cursor-pointer\\\" (click)=\\\"addOrder('staff_user_name')\\\">\\n          Staff\\n          <i class=\\\"fa {{ getClassOrder('staff_user_name') }}\\\"></i>\\n        </th>\\n        <th class=\\\"cursor-pointer\\\" (click)=\\\"addOrder('staff_full_name')\\\">\\n          Full Name\\n          <i class=\\\"fa {{ getClassOrder('staff_full_name') }}\\\"></i>\\n        </th>\\n        <th class=\\\"cursor-pointer\\\" (click)=\\\"addOrder('statusOfProcessName')\\\">\\n          Activity Type\\n          <i class=\\\"fa {{ getClassOrder('statusOfProcessName') }}\\\"></i>\\n        </th>\\n        <th class=\\\"cursor-pointer\\\" (click)=\\\"addOrder('dateDisplay')\\\">\\n          Sale Date\\n          <i class=\\\"fa {{ getClassOrder('dateDisplay') }}\\\"></i>\\n        </th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let saleActivity of saleActivities;\\\">\\n        <td>\\n          <button type=\\\"button\\\" class=\\\"mr-1 btn btn-info\\\" (click)=\\\"editSareActivity(saleActivity)\\\"><i class=\\\"fa fa-edit\\\"></i></button>\\n          <button type=\\\"button\\\" class=\\\"mr-1 btn btn-danger\\\" (click)=\\\"removeSareActivity(saleActivity)\\\"><i class=\\\"fa fa-trash\\\"></i></button>\\n        </td>\\n        <td>{{ saleActivity.customer_name }}</td>\\n        <td>{{ saleActivity.staff_user_name }}</td>\\n        <td>{{ saleActivity.staff_full_name }}</td>\\n        <td>{{ saleActivity.statusOfProcessName }}</td>\\n        <td>{{ saleActivity.dateDisplay }}</td>\\n      </tr>\\n      <tr [ngClass]=\\\"{ 'hidden': saleActivities.length > 0 }\\\">\\n        <td colspan=\\\"5\\\" class=\\\"text-center\\\">\\n          Data not found\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\\n<div class=\\\"pagination mt-4\\\" [ngClass]=\\\"{ 'hidden': saleActivities.length === 0 }\\\">\\n  <pagination\\n    class=\\\"pagination-md\\\"\\n    [totalItems]=\\\"query.totalElements\\\"\\n    [(ngModel)]=\\\"query.currentPage\\\"\\n    pageBtnClass=\\\"btn\\\"\\n    [itemsPerPage]=\\\"query.size\\\"\\n    [maxSize]=\\\"5\\\"\\n    (pageChanged)=\\\"pageChanged($event)\\\"\\n    previousText=\\\"&lsaquo;\\\"\\n    nextText=\\\"&rsaquo;\\\"\\n    firstText=\\\"&laquo;\\\"\\n    lastText=\\\"&raquo;\\\">\\n  </pagination>\\n</div>\\n\"","module.exports = \".sale-activity-table.table thead th,\\n.sale-activity-table.table tbody td {\\n  min-width: 200px; }\\n  .sale-activity-table.table thead th:first-child,\\n  .sale-activity-table.table tbody td:first-child {\\n    max-width: 150px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { QueryBuilder } from 'shared/utils/query-builder';\nimport { SaleActivity } from 'models/sale-activity';\nimport { Subscription } from 'rxjs/Subscription';\nimport { EventEmitterService } from 'shared/utils/event-emitter.service';\nimport { EMITTER_TYPE } from 'constants/emitter';\nimport { SaleActivityService } from 'shared/services/sale-activity.service';\nimport { NotifyService } from 'shared/utils/notify.service';\n\nimport * as clone from 'lodash/clone';\nimport * as orderBy from 'lodash/orderBy';\n\nimport { ModalOptions, BsModalService } from 'ngx-bootstrap/modal';\nimport { TimelineModalDeleteComponent } from '../timeline-modal-delete/timeline-modal-delete.component';\nimport { TimelineModalEditComponent } from '../timeline-modal-edit/timeline-modal-edit.component';\n\ninterface OrderCareActivity {\n  columnName: string;\n  type: string;\n}\n\n@Component({\n  selector: 'app-timeline-list',\n  templateUrl: './timeline-list.component.html',\n  styleUrls: ['./timeline-list.component.scss'],\n})\nexport class TimelineListComponent implements OnInit {\n  public query: QueryBuilder = new QueryBuilder();\n  public saleActivities: SaleActivity[] = [];\n\n  private _subscriber: Subscription;\n  private _orderArr: OrderCareActivity[] = [];\n  private _filterQuery: any = {};\n\n  public get orderColumnName(): string[] {\n    return this._orderArr.map((item) => {\n      return item.columnName;\n    });\n  }\n  public get orderType(): string[] {\n    return this._orderArr.map((item) => {\n      return item.type;\n    });\n  }\n\n  constructor(\n    private _emitter: EventEmitterService,\n    private _saleActivitySv: SaleActivityService,\n    private _notify: NotifyService,\n    private _modalService: BsModalService,\n  ) {}\n\n  ngOnInit() {\n    this._getListSaleActivity();\n    this._onEventEmitter();\n  }\n\n  private _onEventEmitter() {\n    this._subscriber = this._emitter.caseNumber$.subscribe((data) => {\n      if (data && data.type === EMITTER_TYPE.CREATE_SALE_ACTIVITY_2) {\n        this.query.resetQuery();\n        this._getListSaleActivity();\n      }\n\n      if (data && data.type === EMITTER_TYPE.FILTER_SALE_ACTIVITY_2) {\n        this.query.resetQuery();\n        this._filterQuery = data.params;\n        this._getListSaleActivity();\n      }\n    });\n  }\n\n  private _getListSaleActivity() {\n    const parmas = {\n      ...this.query.queryJSON(),\n      ...this._filterQuery,\n    };\n    this._saleActivitySv.getSaleActivitiesList(parmas).subscribe(\n      (res) => {\n        this.saleActivities = res.list;\n        this.query.setQuery(res);\n      },\n      (errors) => {\n        this._notify.error(errors);\n      },\n    );\n  }\n\n  public editSareActivity(saleActivity: SaleActivity) {\n    const config = {\n      class: 'modal-lg',\n      initialState: {\n        saleActivity: clone(saleActivity),\n      },\n    };\n\n    this._openModal(TimelineModalEditComponent, config);\n  }\n\n  public removeSareActivity(saleActivity: SaleActivity) {\n    const config = {\n      class: 'modal-md',\n      initialState: {\n        saleActivity,\n      },\n    };\n\n    this._openModal(TimelineModalDeleteComponent, config);\n  }\n\n  private _openModal(comp, config?: ModalOptions) {\n    const subscribe = this._modalService.onHidden.subscribe((reason: string) => {\n      subscribe.unsubscribe();\n      if (reason === 'reload') {\n        this._getListSaleActivity();\n      }\n    });\n\n    this._modalService.show(comp, config);\n  }\n\n  public addOrder(columnName: string) {\n    const index = this._orderArr.findIndex((item) => item.columnName === columnName);\n\n    if (this._orderArr.length > 0 && this._orderArr[0].columnName === columnName) {\n      if (this._orderArr[0].type === 'desc') {\n        this._orderArr[0].type = 'asc';\n      } else {\n        this._orderArr[0].type = 'desc';\n      }\n    } else {\n      this._orderArr = [];\n      this._orderArr.push({\n        columnName: columnName,\n        type: 'desc',\n      });\n    }\n\n    setTimeout(() => {\n      this._orderCustomer();\n    }, 0);\n  }\n\n  private _orderCustomer() {\n    this.saleActivities = orderBy(this.saleActivities, this.orderColumnName, this.orderType);\n  }\n\n  public getClassOrder(columnName: string): string {\n    if (this._orderArr.length > 0 && this._orderArr[0].columnName === columnName) {\n      if (this._orderArr[0].type === 'desc') {\n        return 'fa-sort-down';\n      }\n\n      return 'fa-sort-up';\n    }\n\n    return 'fa-sort';\n  }\n\n  public pageChanged(event) {\n    this.query.currentPage = event.page;\n    this._getListSaleActivity();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TimelineListComponent } from './timeline-list.component';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { FormsModule } from '@angular/forms';\nimport { SaleActivityService } from 'shared/services/sale-activity.service';\nimport { TimelineModalDeleteModule } from '../timeline-modal-delete/timeline-modal-delete.module';\nimport { TimelineModalEditModule } from '../timeline-modal-edit/timeline-modal-edit.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ModalModule.forRoot(),\n    PaginationModule.forRoot(),\n    FormsModule,\n    TimelineModalDeleteModule,\n    TimelineModalEditModule,\n  ],\n  declarations: [TimelineListComponent],\n  exports: [TimelineListComponent],\n  providers: [SaleActivityService],\n})\nexport class TimelineListModule {}\n","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h5 class=\\\"modal-title\\\">Do you want to delete?</h5>\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"close()\\\">\\n    <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n  </button>\\n</div>\\n\\n<div class=\\\"modal-body\\\">\\n  <div class=\\\"text-center\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary w-25 mr-2\\\" (click)=\\\"close()\\\">Cancel</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary w-25 ml-2\\\" (click)=\\\"removeSaleActivity()\\\"\\n      [disabled]=\\\"isLoading\\\">\\n      OK\\n      <i *ngIf=\\\"isLoading\\\" class=\\\"fa fa-refresh fa-spin\\\"></i>\\n    </button>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { NotifyService } from 'shared/utils/notify.service';\nimport { SaleActivity } from 'models/sale-activity';\nimport { SaleActivityService } from 'shared/services/sale-activity.service';\n\n@Component({\n  selector: 'app-timeline-modal-delete',\n  templateUrl: './timeline-modal-delete.component.html',\n  styleUrls: ['./timeline-modal-delete.component.scss'],\n})\nexport class TimelineModalDeleteComponent implements OnInit {\n  public isLoading = false;\n  public saleActivity: SaleActivity;\n\n  constructor(\n    private _bsModalRef: BsModalRef,\n    private _modalService: BsModalService,\n    private _saleActivitySv: SaleActivityService,\n    private _notify: NotifyService,\n  ) {}\n\n  ngOnInit() {}\n\n  public removeSaleActivity() {\n    this.isLoading = true;\n\n    this._saleActivitySv.removeSaleActivity(this.saleActivity.id).subscribe(\n      (res) => {\n        this._notify.success('delete sale activity successs');\n        this.close('reload');\n        this.isLoading = false;\n      },\n      (errors) => {\n        this.isLoading = false;\n        this._notify.error(errors);\n      },\n    );\n  }\n\n  public close(reason?: string) {\n    this._modalService.setDismissReason(reason);\n    this._bsModalRef.hide();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TimelineModalDeleteComponent } from './timeline-modal-delete.component';\nimport { SaleActivityService } from 'shared/services/sale-activity.service';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TimelineModalDeleteComponent],\n  exports: [TimelineModalDeleteComponent],\n  entryComponents: [TimelineModalDeleteComponent],\n  providers: [SaleActivityService],\n})\nexport class TimelineModalDeleteModule {}\n","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h5 class=\\\"modal-title\\\">Update Care Activity</h5>\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"close()\\\">\\n    <i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i>\\n  </button>\\n</div>\\n\\n<div class=\\\"modal-body customer-edit\\\">\\n  <form #SareActivityForm=\\\"ngForm\\\" autocomplete=\\\"off\\\" novalidate>\\n    <div class=\\\"row mb-4\\\">\\n      <div class=\\\"col-lg-6 col-md-12 form-group\\\">\\n        <label>Customer <i class=\\\"required\\\">&#40;*&#41;</i></label>\\n        <ng-select\\n          [items]=\\\"customers | async\\\"\\n          class=\\\"text-left\\\"\\n          [closeOnSelect]=\\\"true\\\"\\n          [clearable]=\\\"true\\\"\\n          [loading]=\\\"isLoadingCusotmer\\\"\\n          placeholder=\\\"please select customer\\\"\\n          [searchable]=\\\"true\\\"\\n          name=\\\"customer\\\"\\n          [(ngModel)]=\\\"saleActivity.customer\\\"\\n          (ngModelChange)=\\\"changeCustomer()\\\"\\n          bindLabel=\\\"customerName\\\"\\n          [typeahead]=\\\"customerInput$\\\"\\n          required>\\n        </ng-select>\\n      </div>\\n\\n      <div class=\\\"col-lg-6 col-md-12 form-group\\\">\\n        <label for=\\\"Name\\\">Staff</label>\\n        <ng-select\\n          [items]=\\\"staffs\\\"\\n          class=\\\"text-left\\\"\\n          [closeOnSelect]=\\\"true\\\"\\n          [clearable]=\\\"true\\\"\\n          [loading]=\\\"isLoadingStaff\\\"\\n          placeholder=\\\"please select staff\\\"\\n          [searchable]=\\\"false\\\"\\n          name=\\\"assignedStaff\\\"\\n          [(ngModel)]=\\\"saleActivity.assignedStaff\\\"\\n          bindLabel=\\\"code_full_name\\\">\\n        </ng-select>\\n      </div>\\n\\n      <!-- <div class=\\\"col-lg-6 col-md-12 form-group\\\">\\n        <label for=\\\"Department\\\">Department</label>\\n        <input type=\\\"text\\\" id=\\\"Department\\\"\\n          autocomplete=\\\"new-department\\\"\\n          class=\\\"form-control\\\"\\n          name=\\\"department\\\"\\n          placeholder=\\\"please enter department\\\"\\n          [(ngModel)]=\\\"saleActivity.department\\\">\\n      </div> -->\\n\\n      <div class=\\\"col-lg-6 col-md-12 form-group\\\">\\n        <label for=\\\"typeOfContact\\\">Activity Type</label>\\n        <ng-select\\n          [items]=\\\"statusOfProcesses\\\"\\n          class=\\\"text-left\\\"\\n          [closeOnSelect]=\\\"true\\\"\\n          [clearable]=\\\"true\\\"\\n          [loading]=\\\"isLoadingstatusOfProcess\\\"\\n          placeholder=\\\"please select activity type\\\"\\n          [searchable]=\\\"false\\\"\\n          name=\\\"statusOfProcess\\\"\\n          [(ngModel)]=\\\"saleActivity.statusOfProcess\\\"\\n          bindLabel=\\\"name\\\">\\n        </ng-select>\\n      </div>\\n\\n      <div class=\\\"col-lg-6 col-md-12 form-group\\\">\\n        <label for=\\\"SaleDate\\\">Sale Date</label>\\n        <input type=\\\"text\\\" id=\\\"SaleDate\\\"\\n          autocomplete=\\\"new-SaleDate\\\"\\n          readonly\\n          placeholder=\\\"please select sale date\\\"\\n          class=\\\"form-control\\\"\\n          name=\\\"saleDate\\\"\\n          bsDatepicker\\n          [(bsValue)]=\\\"saleActivity.dateBinding\\\"\\n          [ngModel]=\\\"saleActivity.dateBinding\\\"\\n          [bsConfig]=\\\"DATEPICKER_CONFIG\\\"\\n          (bsValueChange)=\\\"onValueChange($event)\\\">\\n      </div>\\n\\n      <div class=\\\"col-lg-6 col-md-12 form-group\\\">\\n        <label for=\\\"Note\\\">Note</label>\\n        <textarea name=\\\"note\\\"\\n          class=\\\"form-control\\\"\\n          id=\\\"Note\\\"\\n          rows=\\\"5\\\"\\n          autocomplete=\\\"new-note\\\"\\n          placeholder=\\\"please enter note\\\"\\n          [(ngModel)]=\\\"saleActivity.note\\\"></textarea>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-12 text-center\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary w-25 mr-2\\\" (click)=\\\"close()\\\">Cancel</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary w-25 ml-2\\\"\\n          (click)=\\\"updateSareActivity()\\\"\\n          [disabled]=\\\"isLoading || SareActivityForm.form.invalid\\\">\\n          OK\\n          <i *ngIf=\\\"isLoading\\\" class=\\\"fa fa-refresh fa-spin\\\"></i>\\n        </button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Customer } from 'models/customer';\nimport { of } from 'rxjs/internal/observable/of';\nimport { Subject } from 'rxjs/Subject';\nimport { CustomerService } from 'shared/services/customer.service';\nimport { NotifyService } from 'shared/utils/notify.service';\nimport { concat } from 'rxjs/internal/observable/concat';\nimport { debounceTime } from 'rxjs/internal/operators/debounceTime';\nimport { distinctUntilChanged } from 'rxjs/internal/operators/distinctUntilChanged';\nimport { tap } from 'rxjs/internal/operators/tap';\nimport { switchMap } from 'rxjs/internal/operators/switchMap';\nimport { catchError } from 'rxjs/internal/operators/catchError';\nimport { DATEPICKER_CONFIG } from 'constants/datepicker-config';\nimport { User } from 'models/user';\nimport { UserService } from 'shared/services/user.service';\nimport { SaleActivity } from 'models/sale-activity';\nimport { CustomerClassification } from 'models/customer-classification';\nimport { CustomerClassificationService } from 'shared/services/customer-classification.service';\nimport { SaleActivityService } from 'shared/services/sale-activity.service';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { RoleService } from 'app/role.service';\n\n@Component({\n  selector: 'app-timeline-modal-edit',\n  templateUrl: './timeline-modal-edit.component.html',\n  styleUrls: ['./timeline-modal-edit.component.scss'],\n})\nexport class TimelineModalEditComponent implements OnInit {\n  public isLoading = false;\n\n  public saleActivity: SaleActivity = new SaleActivity();\n\n  public customers: Observable<Customer[]> = of([]);\n  public customerInput$ = new Subject<string>();\n  public isLoadingCusotmer = false;\n\n  public staffs: User[] = [];\n  public isLoadingStaff = false;\n\n  // type of contact\n  public isLoadingstatusOfProcess = false;\n  public statusOfProcesses: CustomerClassification[] = [];\n\n  public DATEPICKER_CONFIG = DATEPICKER_CONFIG;\n\n  constructor(\n    private _customerSv: CustomerService,\n    private _userSv: UserService,\n    private _notify: NotifyService,\n    private _customerClassificationSv: CustomerClassificationService,\n    private _saleActivitySv: SaleActivityService,\n    private _bsModalRef: BsModalRef,\n    private _modalService: BsModalService,\n    private _role: RoleService,\n  ) {}\n\n  ngOnInit() {\n    this._initSearchCustomers();\n    this._getStaffs();\n    this._statusOfProcess();\n  }\n\n  private _initSearchCustomers() {\n    this._customerSv\n      .filterCustomers({\n        page: 0,\n        size: 100,\n        sort: 'asc',\n        column: 'id',\n      })\n      .subscribe((res) => {\n        this._searchCustomers(res.customerList);\n      });\n  }\n\n  private _searchCustomers(customers: Customer[]) {\n    this.customers = concat(\n      of(customers), // default items\n      this.customerInput$.pipe(\n        debounceTime(200),\n        distinctUntilChanged(),\n        tap(() => (this.isLoadingCusotmer = true)),\n        switchMap((term) =>\n          this._customerSv\n            .filterCustomers({\n              page: 0,\n              size: 100,\n              sort: 'asc',\n              column: 'id',\n              txtSearch: term || '',\n            })\n            .map((res) => res.customerList)\n            .pipe(\n              catchError(() => of([])), // empty list on error\n              tap(() => (this.isLoadingCusotmer = false)),\n            ),\n        ),\n      ),\n    );\n  }\n\n  private _getStaffs(opts: any = {}) {\n    this.isLoadingStaff = true;\n\n    this._userSv.getAllUsers(opts).subscribe(\n      (res) => {\n        this.staffs = res;\n        const index = this.staffs.findIndex(\n          (item) => this.saleActivity.assignedStaff && item.id === this.saleActivity.assignedStaff.id,\n        );\n\n        if (index < 0) {\n          this.saleActivity.assignedStaff = null;\n        }\n\n        this.isLoadingStaff = false;\n      },\n      (errors) => {\n        this.isLoadingStaff = false;\n        this._notify.error(errors);\n      },\n    );\n  }\n\n  public onValueChange(event) {\n    this.saleActivity.saleDate = event;\n  }\n\n  private _statusOfProcess() {\n    this.isLoadingstatusOfProcess = true;\n\n    const params = {\n      type: 'contact',\n    };\n    this.statusOfProcesses = [];\n\n    this._customerClassificationSv.getCustomerClassification(params).subscribe(\n      (res) => {\n        this.isLoadingstatusOfProcess = false;\n        this.statusOfProcesses = res.customerClassifications;\n      },\n      (errors) => {\n        this.isLoadingstatusOfProcess = false;\n        this._notify.error(errors);\n      },\n    );\n  }\n\n  public updateSareActivity() {\n    this.isLoading = true;\n\n    this._saleActivitySv.updateSaleActivity(this.saleActivity.id, this.saleActivity.toJSON()).subscribe(\n      (res) => {\n        this.close('reload');\n        this.isLoading = false;\n      },\n      (errors) => {\n        this._notify.error(errors);\n        this.isLoading = false;\n      },\n    );\n  }\n\n  public close(reason?: string) {\n    this._modalService.setDismissReason(reason);\n    this._bsModalRef.hide();\n  }\n\n  public changeCustomer() {\n    if (!this._role.is_admin) {\n      return;\n    }\n    const opts: any = {};\n    if (this.saleActivity.customer) {\n      opts.branchId = this.saleActivity.customer.assignedBranchId;\n    }\n    this._getStaffs(opts);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TimelineModalEditComponent } from './timeline-modal-edit.component';\nimport { FormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { CustomerService } from 'shared/services/customer.service';\nimport { SaleActivityService } from 'shared/services/sale-activity.service';\n\n@NgModule({\n  imports: [CommonModule, NgSelectModule, FormsModule, BsDatepickerModule.forRoot()],\n  declarations: [TimelineModalEditComponent],\n  entryComponents: [TimelineModalEditComponent],\n  exports: [TimelineModalEditComponent],\n  providers: [CustomerService, SaleActivityService],\n})\nexport class TimelineModalEditModule {}\n","module.exports = \"<nav class=\\\"nav nav-tabs timeline-tabs mb-4\\\">\\n  <a class=\\\"nav-item nav-link\\\" [routerLink]=\\\"['/cim/timeline', 'list']\\\" routerLinkActive=\\\"active\\\">Sale Activities</a>\\n  <a class=\\\"nav-item nav-link\\\"\\n    [routerLink]=\\\"['/cim/timeline', 'create']\\\"\\n    routerLinkActive=\\\"active\\\">Create Sale Activity</a>\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\\n<app-timeline-list></app-timeline-list>\\n\"","module.exports = \".nav.nav-tabs.timeline-tabs a {\\n  width: 200px;\\n  color: #000; }\\n  .nav.nav-tabs.timeline-tabs a.active {\\n    color: #39f;\\n    border-bottom: 2px solid #39f; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-timeline',\n  templateUrl: './timeline.component.html',\n  styleUrls: ['./timeline.component.scss']\n})\nexport class TimelineComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TimelineComponent } from './timeline.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TimelineListModule } from './timeline-list/timeline-list.module';\nconst routes: Routes = [\n  {\n    path: '',\n    component: TimelineComponent,\n    children: [\n      {\n        path: 'list',\n        loadChildren: './timeline-tree/timeline-tree.module#TimelineTreeModule',\n      },\n      {\n        path: 'create',\n        loadChildren: './timeline-create/timeline-create.module#TimelineCreateModule',\n      },\n      {\n        path: '**',\n        redirectTo: 'list',\n        pathMatch: 'full',\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [CommonModule, RouterModule.forChild(routes), TimelineListModule],\n  declarations: [TimelineComponent],\n})\nexport class TimelineModule {}\n","import { Customer } from './customer';\nimport { User } from './user';\nimport { CustomerClassification } from './customer-classification';\n\nimport * as moment from 'moment';\nimport { BaseModelInterface, BaseModel } from './base.model';\nimport { Deserializable } from 'shared/interfaces/deserializable';\n\nexport enum StatusOfProcess {\n  SENT_MAIL = 'Sent Mail',\n  CALL = 'Call',\n  MEETING_WITH_CUSTOMER = 'Meeting with customer',\n  MADE_AND_SEND_QUOTATION = 'Made and sent quotation',\n  NEGOTIATION = 'Negotiation',\n  SIGNED_CONTRACT = 'Signed contract',\n}\n\ninterface SaleActivityInterface extends BaseModelInterface {\n  statusOfProcess: CustomerClassification;\n  note: string;\n  dateBinding: Date;\n  saleDate: any;\n  customerId: number;\n  customer: Customer;\n  assignedStaffId: number;\n  assignedStaff: User;\n}\nexport class SaleActivity extends BaseModel implements Deserializable<SaleActivity> {\n  customerId: number;\n  customer: Customer;\n  public get customer_name(): string {\n    return this.customer ? this.customer.customerName : '';\n  }\n\n  assignedStaffId: number;\n  assignedStaff: User;\n  public get staff_user_name(): string {\n    return this.assignedStaff ? this.assignedStaff.userName : '';\n  }\n  public get staff_full_name(): string {\n    return this.assignedStaff ? this.assignedStaff.fullName : '';\n  }\n\n  statusOfProcess: CustomerClassification;\n  public get statusOfProcessName(): string {\n    return this.statusOfProcess ? this.statusOfProcess.name : '';\n  }\n  public get statusOfProcessIcon(): string {\n    if (!this.statusOfProcess || !this.statusOfProcess.name) {\n      return;\n    }\n\n    switch (this.statusOfProcess.name) {\n      case StatusOfProcess.CALL:\n        return `fa fa-phone-square`;\n      case StatusOfProcess.MADE_AND_SEND_QUOTATION:\n        return `fa fa-th-list`;\n      case StatusOfProcess.MEETING_WITH_CUSTOMER:\n        return `fa fa-comments`;\n      case StatusOfProcess.NEGOTIATION:\n        return `fa fa-thumbs-up`;\n      case StatusOfProcess.SENT_MAIL:\n        return `fa fa-envelope`;\n      case StatusOfProcess.SIGNED_CONTRACT:\n        return `fa fa-check-square`;\n    }\n  }\n  public get statusOfProcessColor(): string {\n    if (!this.statusOfProcess || !this.statusOfProcess.name) {\n      return;\n    }\n\n    switch (this.statusOfProcess.name) {\n      case StatusOfProcess.CALL:\n        return `primary`;\n      case StatusOfProcess.MADE_AND_SEND_QUOTATION:\n        return `success`;\n      case StatusOfProcess.MEETING_WITH_CUSTOMER:\n        return `warning`;\n      case StatusOfProcess.NEGOTIATION:\n        return `danger`;\n      case StatusOfProcess.SENT_MAIL:\n        return `info`;\n      case StatusOfProcess.SIGNED_CONTRACT:\n        return `info`;\n    }\n  }\n\n  note: string;\n\n  saleDate: any;\n  public get date_str(): string {\n    return moment(this.saleDate).toISOString();\n  }\n  public get dateDisplay(): string {\n    return moment(this.saleDate).format('YYYY-MM-DD');\n  }\n\n  dateBinding: Date;\n\n  constructor() {\n    super();\n    this.dateBinding = new Date();\n  }\n\n  deserialize(input: Partial<SaleActivityInterface>): SaleActivity {\n    if (!input) {\n      return;\n    }\n\n    super.deserialize(input);\n    Object.assign(this, input);\n\n    this.dateBinding = input.saleDate instanceof Date ? input.saleDate : new Date(input.saleDate);\n\n    this.customer = input.customer instanceof Customer ? input.customer : new Customer().deserialize(input.customer);\n\n    this.assignedStaff =\n      input.assignedStaff instanceof User ? input.assignedStaff : new User().deserialize(input.assignedStaff);\n\n    this.statusOfProcess =\n      input.statusOfProcess instanceof CustomerClassification\n        ? input.statusOfProcess\n        : new CustomerClassification().deserialize(input.statusOfProcess);\n\n    return this;\n  }\n\n  public toJSON() {\n    return {\n      customerId: this.customer ? this.customer.id : null,\n      assignedStaffId: this.assignedStaff ? this.assignedStaff.id : null,\n      statusOfProcessId: this.statusOfProcess ? this.statusOfProcess.id : null,\n      note: this.note || null,\n      saleDate: this.date_str,\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { CustomerClassification } from 'models/customer-classification';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomerClassificationService {\n  constructor(private _api: ApiService) {}\n\n  public getCustomerClassification(params: any) {\n    return this._api.get(`customer-classifications`, params).map((res) => {\n      res.data.customerClassifications = res.data.customerClassifications.map((item) =>\n        new CustomerClassification().deserialize(item),\n      );\n      return res.data;\n    });\n  }\n}\n"],"sourceRoot":""}