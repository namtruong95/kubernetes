{"version":3,"sources":["webpack:///./src/app/ssm/quotation/quotation-create/quotation-create.component.html","webpack:///./src/app/ssm/quotation/quotation-create/quotation-create.component.scss","webpack:///./src/app/ssm/quotation/quotation-create/quotation-create.component.ts","webpack:///./src/app/ssm/quotation/quotation-create/quotation-create.module.ts"],"names":[],"mappings":"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","file":"quotation-create-quotation-create-module.725e10d20e80b2125876.js","sourcesContent":["module.exports = \"<form #QuotationForm=\\\"ngForm\\\" novalidate>\\n  <div class=\\\"customer-form-content mb-4\\\">\\n    <!-- border-bottom border-dark -->\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-6 col-md-12 form-group\\\">\\n        <label for=\\\"SaleActivity\\\">Customer Name <i class=\\\"required\\\">&#40;*&#41;</i></label>\\n        <ng-select\\n          [items]=\\\"customers | async\\\"\\n          class=\\\"text-left\\\"\\n          [closeOnSelect]=\\\"true\\\"\\n          [clearable]=\\\"true\\\"\\n          [loading]=\\\"isLoadingCusotmer\\\"\\n          placeholder=\\\"please select customer\\\"\\n          [searchable]=\\\"true\\\"\\n          name=\\\"customer\\\"\\n          [(ngModel)]=\\\"quotation.customer\\\"\\n          bindLabel=\\\"customerName\\\"\\n          [typeahead]=\\\"customerInput$\\\"\\n          (change)=\\\"changeCusotmer()\\\"\\n          required>\\n        </ng-select>\\n      </div>\\n\\n      <div class=\\\"col-lg-6 col-md-12 form-group\\\">\\n        <label for=\\\"typeOfService\\\">Service Term <i class=\\\"required\\\">&#40;*&#41;</i></label>\\n        <ng-select\\n          [items]=\\\"typeOfServices\\\"\\n          class=\\\"text-left\\\"\\n          [closeOnSelect]=\\\"true\\\"\\n          [clearable]=\\\"true\\\"\\n          [loading]=\\\"isLoadingTypeOfService\\\"\\n          placeholder=\\\"please select service term\\\"\\n          [searchable]=\\\"false\\\"\\n          name=\\\"typeOfServices\\\"\\n          [(ngModel)]=\\\"quotation.typeOfService\\\"\\n          (change)=\\\"filterPolicies()\\\"\\n          bindLabel=\\\"name\\\"\\n          required>\\n        </ng-select>\\n      </div>\\n\\n      <div class=\\\"col-lg-6 col-md-12\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"serviceTerm\\\">Type Of Service <i class=\\\"required\\\">&#40;*&#41;</i></label>\\n          <ng-select\\n            [items]=\\\"serviceTerms\\\"\\n            class=\\\"text-left\\\"\\n            [closeOnSelect]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [loading]=\\\"isLoadingServiceTerm\\\"\\n            placeholder=\\\"please select type of service\\\"\\n            [searchable]=\\\"false\\\"\\n            name=\\\"serviceTerm\\\"\\n            [(ngModel)]=\\\"quotation.serviceTerm\\\"\\n            (change)=\\\"filterPolicies()\\\"\\n            bindLabel=\\\"name\\\"\\n            required>\\n          </ng-select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"col-lg-6 col-md-12 form-group\\\">\\n        <label for=\\\"bandWidth\\\">Bandwidth (Mbps) <i class=\\\"required\\\">&#40;*&#41;</i></label>\\n        <input type=\\\"text\\\" id=\\\"bandWidth\\\"\\n          autocomplete=\\\"new-bandWidth\\\"\\n          class=\\\"form-control\\\"\\n          name=\\\"bandWidth\\\"\\n          appNumbericValidator\\n          placeholder=\\\"please enter band width\\\"\\n          (keydown.enter)=\\\"filterPolicies()\\\"\\n          (blur)=\\\"filterPolicies()\\\"\\n          [(ngModel)]=\\\"quotation.bandWidth\\\"\\n          required>\\n      </div>\\n\\n      <div class=\\\"col-lg-6 col-md-12 form-group\\\">\\n        <label for=\\\"otc\\\">OTC (MMK) <i class=\\\"required\\\">&#40;*&#41;</i></label>\\n        <input type=\\\"text\\\" id=\\\"otc\\\"\\n          autocomplete=\\\"new-otc\\\"\\n          class=\\\"form-control\\\"\\n          name=\\\"otc\\\"\\n          #OTC\\n          placeholder=\\\"please enter otc site\\\"\\n          [ngModel]=\\\"quotation.otc\\\"\\n          (ngModelChange)=\\\"changeOtc()\\\"\\n          required>\\n      </div>\\n\\n      <div class=\\\"col-lg-6 col-md-12 form-group\\\">\\n        <label for=\\\"mrc\\\">MRC (MMK) <i class=\\\"required\\\">&#40;*&#41;</i>\\n          {{ minMaxMrc }}\\n        </label>\\n        <input type=\\\"text\\\" id=\\\"mrc\\\"\\n          autocomplete=\\\"new-mrc\\\"\\n          class=\\\"form-control\\\"\\n          name=\\\"mrc\\\"\\n          #MRC\\n          placeholder=\\\"please enter mrc\\\"\\n          [ngModel]=\\\"quotation.mrc\\\"\\n          (ngModelChange)=\\\"changeMrc()\\\"\\n          required>\\n      </div>\\n\\n      <div class=\\\"col-lg-6 col-md-12 form-group\\\">\\n        <label for=\\\"reduceOtc\\\">Reduce OTC (%) <i class=\\\"required\\\">&#40;*&#41;</i></label>\\n        <input type=\\\"text\\\" id=\\\"reduceOtc\\\"\\n          autocomplete=\\\"new-reduceOtc\\\"\\n          class=\\\"form-control\\\"\\n          [ngClass]=\\\"{ 'is-invalid': ReduceOTC1.dirty && ReduceOTC1.errors }\\\"\\n          name=\\\"reduceOtc\\\"\\n          appNumbericValidator\\n          min=\\\"0\\\"\\n          max=\\\"100\\\"\\n          placeholder=\\\"please enter reduce OTC\\\"\\n          #ReduceOTC\\n          #ReduceOTC1=\\\"ngModel\\\"\\n          [(ngModel)]=\\\"quotation.reduceOtc\\\"\\n          required>\\n\\n        <div class=\\\"invalid-feedback\\\"\\n          *ngIf=\\\"ReduceOTC1.dirty && ReduceOTC1.errors?.appNumbericValidator\\\">Reduce OTC operation must be an integer within 0 and 100</div>\\n      </div>\\n\\n      <div class=\\\"col-lg-6 col-md-12 form-group\\\">\\n        <label for=\\\"reduceMrc\\\">Reduce MRC (%) <i class=\\\"required\\\">&#40;*&#41;</i></label>\\n        <input type=\\\"text\\\" id=\\\"reduceMrc\\\"\\n          autocomplete=\\\"new-reduceMrc\\\"\\n          class=\\\"form-control\\\"\\n          [ngClass]=\\\"{ 'is-invalid': ReduceMRC1.dirty && ReduceMRC1.errors }\\\"\\n          name=\\\"reduceMrc\\\"\\n          appNumbericValidator\\n          max=\\\"100\\\"\\n          min=\\\"0\\\"\\n          #ReduceMRC\\n          #ReduceMRC1=\\\"ngModel\\\"\\n          placeholder=\\\"please enter reduce MRC\\\"\\n          [(ngModel)]=\\\"quotation.reduceMrc\\\"\\n          required>\\n\\n        <div class=\\\"invalid-feedback\\\"\\n          *ngIf=\\\"ReduceMRC1.dirty && ReduceMRC1.errors?.appNumbericValidator\\\">Reduce MRC operation must be an integer within 0 and 100</div>\\n      </div>\\n\\n      <div class=\\\"col-lg-6 col-md-12 form-group\\\">\\n        <label for=\\\"timeForHire\\\">Time For Hire (months)</label>\\n        <input type=\\\"text\\\" id=\\\"timeForHire\\\"\\n          autocomplete=\\\"new-timeForHire\\\"\\n          class=\\\"form-control\\\"\\n          name=\\\"timeForHire\\\"\\n          appNumbericValidator\\n          min=\\\"0\\\"\\n          placeholder=\\\"please enter time for hire\\\"\\n          [(ngModel)]=\\\"quotation.timeForHire\\\">\\n      </div>\\n\\n      <div class=\\\"col-lg-6 col-md-12 form-group\\\">\\n        <label for=\\\"saleStaff\\\">Sale Staff</label>\\n          <ng-select\\n            [items]=\\\"staffs\\\"\\n            class=\\\"text-left\\\"\\n            [closeOnSelect]=\\\"true\\\"\\n            [clearable]=\\\"true\\\"\\n            [loading]=\\\"isLoadingStaff\\\"\\n            placeholder=\\\"please select  sale staff\\\"\\n            [searchable]=\\\"true\\\"\\n            name=\\\"staff\\\"\\n            [(ngModel)]=\\\"quotation.assignedStaff\\\"\\n            bindLabel=\\\"code_full_name\\\">\\n          </ng-select>\\n      </div>\\n\\n      <div class=\\\"col-lg-6 col-md-12 form-group\\\">\\n        <label for=\\\"timeForProvide\\\">Time For Provide (days)</label>\\n        <input type=\\\"text\\\" id=\\\"timeForProvide\\\"\\n          autocomplete=\\\"new-timeForProvide\\\"\\n          class=\\\"form-control\\\"\\n          name=\\\"timeForProvide\\\"\\n          appNumbericValidator\\n          min=\\\"0\\\"\\n          placeholder=\\\"please enter time for provide\\\"\\n          [(ngModel)]=\\\"quotation.timeForProvide\\\">\\n      </div>\\n\\n      <div class=\\\"col-lg-6 col-md-12 form-group\\\">\\n        <label>distance (km)</label>\\n        <input type=\\\"text\\\"\\n          class=\\\"form-control-plaintext\\\"\\n          name=\\\"distance\\\"\\n          readonly\\n          [ngModel]=\\\"quotation.distance_km\\\">\\n      </div>\\n\\n      <div class=\\\"col-lg-6 col-md-12 form-group\\\">\\n        <label for=\\\"totalPrice\\\">Total Price (MMK)</label>\\n        <input type=\\\"text\\\" id=\\\"totalPrice\\\"\\n          autocomplete=\\\"new-totalPrice\\\"\\n          class=\\\"form-control-plaintext\\\"\\n          name=\\\"totalPrice\\\"\\n          readonly\\n          placeholder=\\\"please enter total rrice\\\"\\n          [ngModel]=\\\"quotation.totalStr\\\">\\n      </div>\\n\\n      <div class=\\\"col-lg-6 col-md-12 form-group\\\">\\n        <label for=\\\"realPrice\\\">Real Price (MMK)</label>\\n        <input type=\\\"text\\\" id=\\\"realPrice\\\"\\n          autocomplete=\\\"new-realPrice\\\"\\n          class=\\\"form-control-plaintext\\\"\\n          name=\\\"realPrice\\\"\\n          readonly\\n          [ngModel]=\\\"quotation.totalTaxStr\\\">\\n      </div>\\n    </div>\\n\\n    <!-- <div class=\\\"row\\\">\\n      <label class=\\\"col text-right my-2\\\">Total Price</label>\\n      <input type=\\\"text\\\"\\n        class=\\\"col form-control-plaintext\\\"\\n        name=\\\"totalPrice\\\"\\n        readonly\\n        [ngModel]=\\\"quotation.totalPrice_display\\\">\\n    </div> -->\\n\\n    <!-- <div class=\\\"row\\\">\\n      <label class=\\\"col text-right my-2\\\">Taxes</label>\\n      <input type=\\\"text\\\"\\n        class=\\\"col form-control-plaintext\\\"\\n        name=\\\"reduce\\\"\\n        readonly\\n        [ngModel]=\\\"quotation.reduceMrc + '%'\\\">\\n    </div> -->\\n\\n    <!-- <div class=\\\"row\\\">\\n      <label class=\\\"col text-right my-2\\\">Real Price</label>\\n      <input type=\\\"text\\\"\\n        class=\\\"col form-control-plaintext\\\"\\n        name=\\\"realPrice\\\"\\n        readonly\\n        [ngModel]=\\\"quotation.realPrice_display\\\">\\n    </div> -->\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n      (click)=\\\"createQuotation(QuotationForm)\\\"\\n      [disabled]=\\\"isLoading || QuotationForm.form.invalid\\\">\\n      Create\\n      <i *ngIf=\\\"isLoading\\\" class=\\\"fa fa-refresh fa-spin\\\"></i>\\n    </button>\\n  </div>\\n</form>\\n\"","module.exports = \"\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Customer } from 'models/customer';\nimport { Subject } from 'rxjs/Subject';\nimport { of } from 'rxjs/internal/observable/of';\nimport { concat } from 'rxjs/internal/observable/concat';\nimport { debounceTime } from 'rxjs/internal/operators/debounceTime';\nimport { distinctUntilChanged } from 'rxjs/internal/operators/distinctUntilChanged';\nimport { tap } from 'rxjs/internal/operators/tap';\nimport { switchMap } from 'rxjs/internal/operators/switchMap';\nimport { catchError } from 'rxjs/internal/operators/catchError';\nimport { CustomerService } from 'shared/services/customer.service';\nimport { EventEmitterService } from 'shared/utils/event-emitter.service';\nimport { EMITTER_TYPE } from 'constants/emitter';\nimport { Quotation } from 'models/quotation';\nimport { NotifyService } from 'shared/utils/notify.service';\nimport { GmapService, GmapParams } from 'shared/services/gmap.service';\nimport { Helpers } from 'shared/helpers/helpers';\nimport { CustomerClassification } from 'models/customer-classification';\nimport { CustomerClassificationService } from 'shared/services/customer-classification.service';\nimport { BtsService } from 'shared/services/bts.service';\nimport { Bts } from 'models/bts';\nimport { Marker } from 'interfaces/maker';\nimport { QuotationService } from 'shared/services/quotation.service';\nimport { PolicyService } from 'shared/services/policy.service';\nimport { User } from 'models/user';\nimport { UserService } from 'shared/services/user.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-quotation-create',\n  templateUrl: './quotation-create.component.html',\n  styleUrls: ['./quotation-create.component.scss'],\n})\nexport class QuotationCreateComponent implements OnInit {\n  @ViewChild('ReduceMRC')\n  ReduceMRC: ElementRef;\n  @ViewChild('ReduceOTC')\n  ReduceOTC: ElementRef;\n  @ViewChild('OTC')\n  OTC: ElementRef;\n  @ViewChild('MRC')\n  MRC: ElementRef;\n\n  public customers: Observable<Customer[]> = of([]);\n  public customerInput$ = new Subject<string>();\n  public isLoadingCusotmer = false;\n\n  public quotation: Quotation = new Quotation();\n  // type of serivice\n  public isLoadingTypeOfService = false;\n  public typeOfServices: CustomerClassification[] = [];\n\n  // service term\n  public isLoadingServiceTerm = false;\n  public serviceTerms: CustomerClassification[] = [];\n\n  // sale staffs\n  public staffs: User[] = [];\n  public isLoadingStaff = false;\n\n  public isLoadingBts = false;\n  public btsList: Bts[] = [];\n  public get btsMakers(): Marker[] {\n    return this.btsList.map((bts) => {\n      return bts.markerToJSON();\n    });\n  }\n  public isLoading = false;\n\n  public minMaxMrc: string;\n\n  constructor(\n    private _customerSv: CustomerService,\n    private _emitter: EventEmitterService,\n    private _gmapSv: GmapService,\n    private _notify: NotifyService,\n    private _customerClassificationSv: CustomerClassificationService,\n    private _btsSv: BtsService,\n    private _quotationSv: QuotationService,\n    private _policySv: PolicyService,\n    private _userSv: UserService,\n  ) {}\n\n  ngOnInit() {\n    this.quotation.customer = null;\n    this.quotation.serviceTerm = null;\n    this.quotation.typeOfService = null;\n    this.quotation.assignedStaff = null;\n\n    this._initSearchCustomers();\n    this._getServicesterm();\n    this._getTypeOfServices();\n    this._getAllBts();\n    this._getStaffs();\n  }\n\n  private _getStaffs() {\n    this.isLoadingStaff = true;\n\n    this._userSv.getAllUsers().subscribe(\n      (res) => {\n        this.staffs = res;\n        this.isLoadingStaff = false;\n      },\n      (errors) => {\n        this.isLoadingStaff = false;\n        this._notify.error(errors);\n      },\n    );\n  }\n\n  private _getAllBts() {\n    this.isLoadingBts = true;\n    this._btsSv.getAllBts().subscribe(\n      (res) => {\n        this.btsList = res.btsList;\n        this.isLoadingBts = false;\n      },\n      (errors) => {\n        this._notify.error(errors);\n        this.isLoadingBts = false;\n      },\n    );\n  }\n\n  private _getServicesterm() {\n    this.isLoadingServiceTerm = true;\n\n    const params = {\n      type: 'service',\n    };\n    this.serviceTerms = [];\n\n    this._customerClassificationSv.getCustomerClassification(params).subscribe(\n      (res) => {\n        this.isLoadingServiceTerm = false;\n        this.serviceTerms = res.customerClassifications;\n      },\n      (errors) => {\n        this.isLoadingServiceTerm = false;\n        this._notify.error(errors);\n      },\n    );\n  }\n\n  private _getTypeOfServices() {\n    this.isLoadingTypeOfService = true;\n\n    const params = {\n      type: 'service-term',\n    };\n    this.typeOfServices = [];\n\n    this._customerClassificationSv.getCustomerClassification(params).subscribe(\n      (res) => {\n        this.isLoadingTypeOfService = false;\n        this.typeOfServices = res.customerClassifications;\n      },\n      (errors) => {\n        this.isLoadingTypeOfService = false;\n        this._notify.error(errors);\n      },\n    );\n  }\n\n  private _initSearchCustomers() {\n    this._customerSv\n      .filterCustomers({\n        page: 0,\n        size: 100,\n        sort: 'asc',\n        column: 'id',\n      })\n      .subscribe((res) => {\n        this._searchCustomers(res.customerList);\n      });\n  }\n\n  private _searchCustomers(customers: Customer[]) {\n    this.customers = concat(\n      of(customers), // default items\n      this.customerInput$.pipe(\n        debounceTime(200),\n        distinctUntilChanged(),\n        tap(() => (this.isLoadingCusotmer = true)),\n        switchMap((term) =>\n          this._customerSv\n            .filterCustomers({\n              page: 0,\n              size: 100,\n              sort: 'asc',\n              column: 'id',\n              txtSearch: term || '',\n            })\n            .map((res) => res.customerList)\n            .pipe(\n              catchError(() => of([])), // empty list on error\n              tap(() => (this.isLoadingCusotmer = false)),\n            ),\n        ),\n      ),\n    );\n  }\n\n  public createQuotation(form: NgForm) {\n    this.isLoading = true;\n\n    this._quotationSv.createQuotation(this.quotation.toJSON()).subscribe(\n      (res) => {\n        this.isLoading = false;\n        this._notify.success('create quotation success');\n        this._emitter.publishData({\n          type: EMITTER_TYPE.CREATE_QUOTATION,\n        });\n        form.form.markAsPristine({ onlySelf: false });\n      },\n      (errors) => {\n        this.isLoading = false;\n        this._notify.error(errors);\n      },\n      () => {\n        setTimeout(() => {\n          this.quotation = new Quotation();\n          this.quotation.customer = null;\n          this.quotation.serviceTerm = null;\n          this.quotation.typeOfService = null;\n          this.quotation.assignedStaff = null;\n        }, 0);\n      },\n    );\n  }\n\n  public changeCusotmer() {\n    if (!this.quotation.customer || !this.quotation.customer.has_address) {\n      this._notify.warning('please select customer or change location for cusotmer');\n      return;\n    }\n\n    if (this.quotation.customer.assignedStaff) {\n      this.quotation.assignedStaff = this.quotation.customer.assignedStaff;\n    }\n\n    if (this.btsList.length === 0) {\n      this._notify.warning('bts not found');\n      return;\n    }\n    const params: GmapParams = {\n      origins: [Helpers.origins(this.quotation.customer.gmapToJSON())],\n      destinations: Helpers.destinations(this.btsMakers),\n    };\n\n    this._gmapSv.matrixDistance(params, (res, status) => {\n      if (status === 'OK') {\n        let min: any = null;\n\n        if (res.rows.length > 0) {\n          res.rows[0].elements.forEach((value, key) => {\n            if (value.status === 'OK' && (!min || value.distance.value < min.value)) {\n              min = {\n                ...value.distance,\n                key,\n              };\n            }\n          });\n        }\n\n        if (min) {\n          this.quotation.distance = Math.round((min.value / 1000) * 10) / 10;\n          this._emitter.publishData({\n            type: EMITTER_TYPE.GMAP_DISTANCE,\n            mode: 'create',\n            data: [\n              {\n                ...this.quotation.customer.gmapToJSON(),\n                label: this.quotation.customer.address,\n                iconUrl: 'https://png.icons8.com/office/30/000000/administrator-male.png',\n              },\n              this.btsList[min.key].markerToJSON(),\n            ],\n          });\n          this.quotation.bts = this.btsList[min.key];\n        } else {\n          this._notify.warning('data not found');\n          this.quotation.distance = 0;\n          this._emitter.publishData({\n            type: EMITTER_TYPE.GMAP_DISTANCE,\n            mode: 'create',\n            data: [],\n          });\n          this.quotation.bts = new Bts();\n        }\n\n        setTimeout(() => {\n          this.filterPolicies();\n        }, 0);\n      }\n    });\n  }\n\n  public filterPolicies() {\n    if (!this.quotation.canFilterPolicy) {\n      return;\n    }\n\n    this._policySv.findPolicy(this.quotation.findPolicyToJSON()).subscribe(\n      (res) => {\n        if (res) {\n          this.quotation.mrc = (+res.mrcMin).format();\n          this.quotation.otc = (+res.otc).format();\n          this.minMaxMrc = `(min=${(+res.mrcMin).format()}; max=${(+res.mrcMax).format()})`;\n        } else {\n          this.minMaxMrc = '';\n        }\n      },\n      (errors) => {\n        this._notify.error(errors);\n      },\n    );\n  }\n\n  // public changeReduceOtc(event) {\n  //   if (event > 100) {\n  //     this.quotation.reduceOtc = 100;\n  //     this.ReduceOTC.nativeElement.value = this.quotation.reduceOtc;\n  //     return;\n  //   }\n  //   if (event < 0) {\n  //     this.quotation.reduceOtc = 0;\n  //     this.ReduceOTC.nativeElement.value = this.quotation.reduceOtc;\n  //     return;\n  //   }\n\n  //   this.quotation.reduceOtc = event;\n  // }\n\n  // public changeReduceMrc(event) {\n  //   if (event > 100) {\n  //     this.quotation.reduceMrc = 100;\n  //     this.ReduceMRC.nativeElement.value = this.quotation.reduceMrc;\n  //     return;\n  //   }\n  //   if (event < 0) {\n  //     this.quotation.reduceMrc = 0;\n  //     this.ReduceMRC.nativeElement.value = this.quotation.reduceMrc;\n  //     return;\n  //   }\n\n  //   this.quotation.reduceMrc = event;\n  // }\n\n  public changeOtc() {\n    if (isNaN(this.OTC.nativeElement.value.toNumber()) || this.OTC.nativeElement.value.toNumber() < 0) {\n      this.OTC.nativeElement.value = this.quotation.otc;\n      return;\n    }\n    this.quotation.otc = this.OTC.nativeElement.value.toNumber().format();\n  }\n\n  public changeMrc() {\n    if (isNaN(this.MRC.nativeElement.value.toNumber()) || this.MRC.nativeElement.value.toNumber() < 0) {\n      this.MRC.nativeElement.value = this.quotation.mrc;\n      return;\n    }\n    this.quotation.mrc = this.MRC.nativeElement.value.toNumber().format();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { QuotationCreateComponent } from './quotation-create.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { BtsService } from 'shared/services/bts.service';\nimport { PolicyService } from 'shared/services/policy.service';\nimport { UserService } from 'shared/services/user.service';\nimport { NumbericValidatorModule } from 'shared/validators/numberic-validator/numberic-validator.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuotationCreateComponent,\n  },\n];\n@NgModule({\n  imports: [CommonModule, RouterModule.forChild(routes), FormsModule, NgSelectModule, NumbericValidatorModule],\n  declarations: [QuotationCreateComponent],\n  providers: [BtsService, PolicyService, UserService],\n})\nexport class QuotationCreateModule {}\n"],"sourceRoot":""}