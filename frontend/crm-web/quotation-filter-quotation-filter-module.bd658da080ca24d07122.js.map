{"version":3,"sources":["webpack:///./src/app/ssm/quotation/quotation-filter/quotation-filter.component.html","webpack:///./src/app/ssm/quotation/quotation-filter/quotation-filter.component.scss","webpack:///./src/app/ssm/quotation/quotation-filter/quotation-filter.component.ts","webpack:///./src/app/ssm/quotation/quotation-filter/quotation-filter.module.ts","webpack:///./src/shared/services/customer-classification.service.ts"],"names":[],"mappings":"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","file":"quotation-filter-quotation-filter-module.bd658da080ca24d07122.js","sourcesContent":["module.exports = \"<form novalidate>\\n  <div class=\\\"row mb-4 customer-form-content\\\">\\n    <div class=\\\"col-md-12 form-group\\\">\\n      <label for=\\\"SaleActivity\\\">Customer</label>\\n      <ng-select\\n        [items]=\\\"customers | async\\\"\\n        class=\\\"text-left\\\"\\n        [closeOnSelect]=\\\"true\\\"\\n        [clearable]=\\\"true\\\"\\n        [loading]=\\\"isLoadingCusotmer\\\"\\n        placeholder=\\\"please select customer\\\"\\n        [searchable]=\\\"true\\\"\\n        name=\\\"customer\\\"\\n        [(ngModel)]=\\\"filterTerm.customer\\\"\\n        bindLabel=\\\"customerName\\\"\\n        (change)=\\\"changeCustomer()\\\"\\n        [typeahead]=\\\"customerInput$\\\">\\n      </ng-select>\\n    </div>\\n\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"typeOfService\\\">Service Term</label>\\n        <ng-select\\n          [items]=\\\"typeOfServices\\\"\\n          class=\\\"text-left\\\"\\n          [closeOnSelect]=\\\"true\\\"\\n          [clearable]=\\\"true\\\"\\n          [loading]=\\\"isLoadingTypeOfService\\\"\\n          placeholder=\\\"please select service term\\\"\\n          [searchable]=\\\"false\\\"\\n          name=\\\"typeOfServices\\\"\\n          [(ngModel)]=\\\"filterTerm.typeOfService\\\"\\n          bindLabel=\\\"name\\\">\\n        </ng-select>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"form-group\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n          (click)=\\\"filterQuotation()\\\">\\n          <i class=\\\"fa fa-search mr-2\\\"></i>\\n          Filter\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Customer } from 'models/customer';\nimport { of } from 'rxjs/internal/observable/of';\nimport { Subject } from 'rxjs/Subject';\nimport { concat } from 'rxjs/internal/observable/concat';\nimport { debounceTime } from 'rxjs/internal/operators/debounceTime';\nimport { distinctUntilChanged } from 'rxjs/internal/operators/distinctUntilChanged';\nimport { tap } from 'rxjs/internal/operators/tap';\nimport { switchMap } from 'rxjs/internal/operators/switchMap';\nimport { CustomerService } from 'shared/services/customer.service';\nimport { EventEmitterService } from 'shared/utils/event-emitter.service';\nimport { catchError } from 'rxjs/internal/operators/catchError';\nimport { CustomerClassification } from 'models/customer-classification';\nimport { NotifyService } from 'shared/utils/notify.service';\nimport { CustomerClassificationService } from 'shared/services/customer-classification.service';\nimport { EMITTER_TYPE } from 'constants/emitter';\n\n@Component({\n  selector: 'app-quotation-filter',\n  templateUrl: './quotation-filter.component.html',\n  styleUrls: ['./quotation-filter.component.scss'],\n})\nexport class QuotationFilterComponent implements OnInit {\n  public filterTerm: any = {\n    customer: null,\n    typeOfService: null,\n  };\n\n  public customers: Observable<Customer[]> = of([]);\n  public customerInput$ = new Subject<string>();\n  public isLoadingCusotmer = false;\n  // type of serivice\n  public isLoadingTypeOfService = false;\n  public typeOfServices: CustomerClassification[] = [];\n\n  constructor(\n    private _customerSv: CustomerService,\n    private _emitter: EventEmitterService,\n    private _notify: NotifyService,\n    private _customerClassificationSv: CustomerClassificationService,\n  ) {}\n\n  ngOnInit() {\n    this._initSearchCustomers();\n    this._getTypeOfServices();\n  }\n\n  private _getTypeOfServices() {\n    this.isLoadingTypeOfService = true;\n\n    const params = {\n      type: 'service-term',\n    };\n    this.typeOfServices = [];\n\n    this._customerClassificationSv.getCustomerClassification(params).subscribe(\n      (res) => {\n        this.isLoadingTypeOfService = false;\n        this.typeOfServices = res.customerClassifications;\n      },\n      (errors) => {\n        this.isLoadingTypeOfService = false;\n        this._notify.error(errors);\n      },\n    );\n  }\n\n  private _initSearchCustomers() {\n    this._customerSv\n      .filterCustomers({\n        page: 0,\n        size: 100,\n        sort: 'asc',\n        column: 'id',\n      })\n      .subscribe((res) => {\n        this._searchCustomers(res.customerList);\n      });\n  }\n\n  private _searchCustomers(customers: Customer[]) {\n    this.customers = concat(\n      of(customers), // default items\n      this.customerInput$.pipe(\n        debounceTime(200),\n        distinctUntilChanged(),\n        tap(() => (this.isLoadingCusotmer = true)),\n        switchMap((term) =>\n          this._customerSv\n            .filterCustomers({\n              page: 0,\n              size: 100,\n              sort: 'asc',\n              column: 'id',\n              txtSearch: term || '',\n            })\n            .map((res) => res.customerList)\n            .pipe(\n              catchError(() => of([])), // empty list on error\n              tap(() => (this.isLoadingCusotmer = false)),\n            ),\n        ),\n      ),\n    );\n  }\n\n  public filterQuotation() {\n    const params: any = {};\n\n    if (this.filterTerm.customer) {\n      params.customerId = this.filterTerm.customer.id;\n    }\n\n    if (this.filterTerm.typeOfService) {\n      params.typeOfServiceId = this.filterTerm.typeOfService.id;\n    }\n\n    this._emitter.publishData({\n      type: EMITTER_TYPE.FILTER_QUOTATION,\n      params,\n    });\n  }\n\n  public changeCustomer() {\n    this._emitter.publishData({\n      type: EMITTER_TYPE.CHANGE_CUSTOMER_QUOTATION,\n      data: this.filterTerm.customer instanceof Customer ? this.filterTerm.customer.gmapToJSON() : null,\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { QuotationFilterComponent } from './quotation-filter.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuotationFilterComponent,\n  },\n];\n@NgModule({\n  imports: [CommonModule, RouterModule.forChild(routes), FormsModule, NgSelectModule],\n  declarations: [QuotationFilterComponent],\n})\nexport class QuotationFilterModule {}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { CustomerClassification } from 'models/customer-classification';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomerClassificationService {\n  constructor(private _api: ApiService) {}\n\n  public getCustomerClassification(params: any) {\n    return this._api.get(`customer-classifications`, params).map((res) => {\n      res.data.customerClassifications = res.data.customerClassifications.map((item) =>\n        new CustomerClassification().deserialize(item),\n      );\n      return res.data;\n    });\n  }\n}\n"],"sourceRoot":""}