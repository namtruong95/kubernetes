{"version":3,"sources":["webpack:///./src/app/ccm/ccm-create/ccm-create.component.html","webpack:///./src/app/ccm/ccm-create/ccm-create.component.scss","webpack:///./src/app/ccm/ccm-create/ccm-create.component.ts","webpack:///./src/app/ccm/ccm-create/ccm-create.module.ts","webpack:///./src/constants/care-activity.ts","webpack:///./src/models/customer-care-activity.ts","webpack:///./src/shared/services/care-activity.service.ts","webpack:///./src/shared/services/staff.service.ts"],"names":[],"mappings":"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","file":"ccm-create-ccm-create-module.494ba6402d3e5a2e0604.js","sourcesContent":["module.exports = \"<form #CareActivityForm=\\\"ngForm\\\" novalidate>\\n  <div class=\\\"row mb-4 customer-form-content\\\">\\n    <div class=\\\"col-lg-6 col-md-12 form-group\\\">\\n      <label>Customer <i class=\\\"required\\\">&#40;*&#41;</i></label>\\n      <ng-select\\n        [items]=\\\"customers | async\\\"\\n        class=\\\"text-left\\\"\\n        [closeOnSelect]=\\\"true\\\"\\n        [clearable]=\\\"true\\\"\\n        [loading]=\\\"isLoadingCusotmer\\\"\\n        placeholder=\\\"please select customer\\\"\\n        [searchable]=\\\"true\\\"\\n        name=\\\"customer\\\"\\n        [(ngModel)]=\\\"careActivity.customer\\\"\\n        (ngModelChange)=\\\"changeCustomer()\\\"\\n        bindLabel=\\\"customerName\\\"\\n        [typeahead]=\\\"customerInput$\\\"\\n        required>\\n      </ng-select>\\n    </div>\\n\\n    <div class=\\\"col-lg-6 col-md-12 form-group\\\">\\n      <label>Status <i class=\\\"required\\\">&#40;*&#41;</i></label>\\n      <ng-select\\n        [items]=\\\"CARE_ACTIVITY_STATUSES\\\"\\n        class=\\\"text-left\\\"\\n        [closeOnSelect]=\\\"true\\\"\\n        [clearable]=\\\"true\\\"\\n        [loading]=\\\"false\\\"\\n        placeholder=\\\"please select status\\\"\\n        [searchable]=\\\"false\\\"\\n        name=\\\"status\\\"\\n        [(ngModel)]=\\\"careActivity.status\\\"\\n        bindLabel=\\\"name\\\"\\n        bindValue=\\\"value\\\"\\n        required>\\n      </ng-select>\\n    </div>\\n\\n    <div class=\\\"col-lg-6 col-md-12 form-group\\\">\\n      <label for=\\\"Name\\\">Sale Care</label>\\n      <ng-select\\n        [items]=\\\"staffs\\\"\\n        class=\\\"text-left\\\"\\n        [closeOnSelect]=\\\"true\\\"\\n        [clearable]=\\\"true\\\"\\n        [loading]=\\\"isLoadingStaff\\\"\\n        placeholder=\\\"please select staff\\\"\\n        [searchable]=\\\"true\\\"\\n        name=\\\"assignedStaff\\\"\\n        [(ngModel)]=\\\"careActivity.assignedStaff\\\"\\n        bindLabel=\\\"code_full_name\\\">\\n      </ng-select>\\n    </div>\\n\\n    <div class=\\\"col-lg-6 col-md-12 form-group\\\">\\n      <label for=\\\"Date\\\">Date</label>\\n      <input type=\\\"text\\\" id=\\\"Date\\\"\\n        autocomplete=\\\"new-date\\\"\\n        readonly\\n        placeholder=\\\"please select date\\\"\\n        class=\\\"form-control\\\"\\n        name=\\\"date\\\"\\n        bsDatepicker\\n        [(bsValue)]=\\\"careActivity.dateBinding\\\"\\n        [ngModel]=\\\"careActivity.dateBinding\\\"\\n        [bsConfig]=\\\"DATEPICKER_CONFIG\\\"\\n        (bsValueChange)=\\\"onValueChange($event)\\\">\\n    </div>\\n\\n    <div class=\\\"col-lg-6 col-md-12 form-group\\\">\\n      <label for=\\\"Reason\\\">Reason</label>\\n      <input type=\\\"text\\\" id=\\\"Reason\\\"\\n        autocomplete=\\\"new-Reason\\\"\\n        class=\\\"form-control\\\"\\n        name=\\\"reason\\\"\\n        placeholder=\\\"please enter reason\\\"\\n        [(ngModel)]=\\\"careActivity.reason\\\">\\n    </div>\\n\\n    <div class=\\\"col-lg-6 col-md-12 form-group\\\">\\n      <label for=\\\"Type\\\">Type</label>\\n      <input type=\\\"text\\\" id=\\\"Type\\\"\\n        autocomplete=\\\"new-Type\\\"\\n        class=\\\"form-control\\\"\\n        name=\\\"type\\\"\\n        placeholder=\\\"please enter type\\\"\\n        [(ngModel)]=\\\"careActivity.type\\\">\\n    </div>\\n\\n    <div class=\\\"col-lg-6 col-md-12 form-group\\\">\\n      <label for=\\\"giftPrice\\\">Gift Price (MMK)</label>\\n      <input type=\\\"text\\\" id=\\\"giftPrice\\\"\\n        autocomplete=\\\"new-giftPrice\\\"\\n        class=\\\"form-control\\\"\\n        name=\\\"giftPrice\\\"\\n        min=\\\"0\\\"\\n        placeholder=\\\"please enter gift price\\\"\\n        #GiftPrice\\n        [ngModel]=\\\"careActivity.giftPrice\\\"\\n        (ngModelChange)=\\\"changeGiftPrice()\\\">\\n    </div>\\n\\n  </div>\\n\\n  <div class=\\\"form-group\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n      (click)=\\\"createCareActivity(CareActivityForm)\\\"\\n      [disabled]=\\\"isLoading || CareActivityForm.form.invalid\\\">\\n      Create\\n      <i *ngIf=\\\"isLoading\\\" class=\\\"fa fa-refresh fa-spin\\\"></i>\\n    </button>\\n  </div>\\n</form>\\n\"","module.exports = \"\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { CustomerCareActivity } from 'models/customer-care-activity';\nimport { Observable } from 'rxjs/Observable';\nimport { Customer } from 'models/customer';\nimport { of } from 'rxjs/internal/observable/of';\nimport { Subject } from 'rxjs/Subject';\nimport { CustomerService } from 'shared/services/customer.service';\nimport { EventEmitterService } from 'shared/utils/event-emitter.service';\nimport { EMITTER_TYPE } from 'constants/emitter';\nimport { NotifyService } from 'shared/utils/notify.service';\nimport { concat } from 'rxjs/internal/observable/concat';\nimport { debounceTime } from 'rxjs/internal/operators/debounceTime';\nimport { distinctUntilChanged } from 'rxjs/internal/operators/distinctUntilChanged';\nimport { tap } from 'rxjs/internal/operators/tap';\nimport { switchMap } from 'rxjs/internal/operators/switchMap';\nimport { catchError } from 'rxjs/internal/operators/catchError';\nimport { CARE_ACTIVITY_STATUSES } from 'constants/care-activity';\nimport { DATEPICKER_CONFIG } from 'constants/datepicker-config';\nimport { CareActivityService } from 'shared/services/care-activity.service';\nimport { UserService } from 'shared/services/user.service';\nimport { User } from 'models/user';\nimport { NgForm } from '@angular/forms';\nimport { RoleService } from 'app/role.service';\n\n@Component({\n  selector: 'app-ccm-create',\n  templateUrl: './ccm-create.component.html',\n  styleUrls: ['./ccm-create.component.scss'],\n})\nexport class CcmCreateComponent implements OnInit {\n  @ViewChild('GiftPrice')\n  GiftPrice: ElementRef;\n  public careActivity: CustomerCareActivity = new CustomerCareActivity();\n\n  public CARE_ACTIVITY_STATUSES = CARE_ACTIVITY_STATUSES;\n  public DATEPICKER_CONFIG = DATEPICKER_CONFIG;\n\n  public customers: Observable<Customer[]> = of([]);\n  public customerInput$ = new Subject<string>();\n  public isLoadingCusotmer = false;\n\n  public staffs: User[] = [];\n  public isLoadingStaff = false;\n\n  public isLoading = false;\n\n  constructor(\n    private _customerSv: CustomerService,\n    private _emitter: EventEmitterService,\n    private _notify: NotifyService,\n    private _careActivitySv: CareActivityService,\n    private _userSv: UserService,\n    private _role: RoleService,\n  ) {}\n\n  ngOnInit() {\n    this.careActivity.customer = null;\n    this.careActivity.status = null;\n    this.careActivity.assignedStaff = null;\n    this._initSearchCustomers();\n    this._getStaffs();\n  }\n\n  private _getStaffs(opts: any = {}) {\n    this.isLoadingStaff = true;\n\n    this._userSv.getAllUsersInBranch(opts).subscribe(\n      (res) => {\n        this.staffs = res;\n        const index = this.staffs.findIndex(\n          (item) => this.careActivity.assignedStaff && item.id === this.careActivity.assignedStaff.id,\n        );\n\n        if (index < 0) {\n          this.careActivity.assignedStaff = null;\n        }\n\n        this.isLoadingStaff = false;\n      },\n      (errors) => {\n        this.isLoadingStaff = false;\n        this._notify.error(errors);\n      },\n    );\n  }\n\n  private _initSearchCustomers() {\n    this._customerSv\n      .filterCustomers({\n        page: 0,\n        size: 100,\n        sort: 'asc',\n        column: 'id',\n      })\n      .subscribe((res) => {\n        this._searchCustomers(res.customerList);\n      });\n  }\n\n  private _searchCustomers(customers: Customer[]) {\n    this.customers = concat(\n      of(customers), // default items\n      this.customerInput$.pipe(\n        debounceTime(200),\n        distinctUntilChanged(),\n        tap(() => (this.isLoadingCusotmer = true)),\n        switchMap((term) =>\n          this._customerSv\n            .filterCustomers({\n              page: 0,\n              size: 100,\n              sort: 'asc',\n              column: 'id',\n              txtSearch: term || '',\n            })\n            .map((res) => res.customerList)\n            .pipe(\n              catchError(() => of([])), // empty list on error\n              tap(() => (this.isLoadingCusotmer = false)),\n            ),\n        ),\n      ),\n    );\n  }\n\n  public onValueChange(event) {\n    this.careActivity.date = event;\n  }\n\n  public createCareActivity(form: NgForm) {\n    this.isLoading = true;\n\n    this._careActivitySv.createCareActivity(this.careActivity.toJSON()).subscribe(\n      (res) => {\n        form.form.markAsPristine({ onlySelf: false });\n        this._notify.success(res.meta.message);\n        this._emitter.publishData({\n          type: EMITTER_TYPE.CREATE_CARE_ACTIVITY,\n        });\n        this.isLoading = false;\n      },\n      (errors) => {\n        this.isLoading = false;\n        this._notify.error(errors);\n      },\n      () => {\n        setTimeout(() => {\n          this.careActivity = new CustomerCareActivity();\n          this.careActivity.customer = null;\n          this.careActivity.status = null;\n          this.careActivity.assignedStaff = null;\n        }, 0);\n      },\n    );\n  }\n\n  public changeGiftPrice() {\n    if (isNaN(this.GiftPrice.nativeElement.value.toNumber())) {\n      this.GiftPrice.nativeElement.value = this.careActivity.giftPrice;\n      return;\n    }\n    this.careActivity.giftPrice = this.GiftPrice.nativeElement.value.toNumber().format();\n  }\n\n  public changeCustomer() {\n    if (!this._role.is_admin) {\n      return;\n    }\n    const opts: any = {};\n    if (this.careActivity.customer) {\n      opts.branchId = this.careActivity.customer.assignedBranchId;\n    }\n    this._getStaffs(opts);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CcmCreateComponent } from './ccm-create.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { StaffService } from 'shared/services/staff.service';\nimport { UserService } from 'shared/services/user.service';\nconst routes: Routes = [\n  {\n    path: '',\n    component: CcmCreateComponent,\n  },\n];\n\n@NgModule({\n  imports: [CommonModule, RouterModule.forChild(routes), FormsModule, NgSelectModule, BsDatepickerModule.forRoot()],\n  declarations: [CcmCreateComponent],\n  providers: [StaffService, UserService],\n})\nexport class CcmCreateModule {}\n","export const CARE_ACTIVITY_STATUSES = [\n  {\n    value: 'ON_GOING',\n    name: 'On Going',\n  },\n  {\n    value: 'COMPLETED',\n    name: 'Completed',\n  },\n];\n\nexport const CARE_ACTIVITY_STATUSES_TEXT = {\n  ON_GOING: 'On Going',\n  COMPLETED: 'Completed',\n};\n","import { Customer } from './customer';\nimport * as moment from 'moment';\nimport { CARE_ACTIVITY_STATUSES_TEXT } from 'constants/care-activity';\nimport { User } from './user';\nimport { BaseModelInterface, BaseModel } from './base.model';\nimport { Deserializable } from 'shared/interfaces/deserializable';\n\ninterface CustomerCareActivityInterface extends BaseModelInterface {\n  customer: Customer;\n  assignedStaff: User;\n  date: any;\n  dateBinding: Date;\n  reason: string;\n  type: string;\n  status: string;\n  giftPrice: string;\n  dateActivity: string;\n  dateActivityFormat: string;\n  assignedStaffId: number;\n}\n\nexport class CustomerCareActivity extends BaseModel implements Deserializable<CustomerCareActivity> {\n  customer: Customer;\n  get customerName(): string {\n    return this.customer ? this.customer.customerName : null;\n  }\n  get customerAddress(): string {\n    return this.customer ? this.customer.address : null;\n  }\n  get customerContactName(): string {\n    return this.customer ? this.customer.contactName : null;\n  }\n  get customerPosition(): string {\n    return this.customer ? this.customer.position : null;\n  }\n\n  assignedStaff: User;\n\n  public get staffName(): string {\n    return this.assignedStaff ? this.assignedStaff.fullName : null;\n  }\n\n  date: any;\n  get date_str(): string {\n    return moment(this.date).toISOString();\n  }\n  get dateDisplay(): string {\n    return moment(this.date).format('YYYY-MM-DD');\n  }\n\n  private _dateBinding: Date;\n  public get dateBinding(): Date {\n    return this._dateBinding;\n  }\n  public set dateBinding(v: Date) {\n    this._dateBinding = v;\n  }\n\n  reason: string;\n  type: string;\n\n  status: string;\n  public get statusStr(): string {\n    return this.status ? CARE_ACTIVITY_STATUSES_TEXT[this.status] : null;\n  }\n\n  private _giftPrice: string;\n  public get giftPrice(): string {\n    return this._giftPrice || '0';\n  }\n  public set giftPrice(v: string) {\n    this._giftPrice = v;\n  }\n\n  dateActivityFormat: string;\n\n  constructor() {\n    super();\n\n    this.date = new Date();\n    this.dateBinding = new Date();\n    this.assignedStaff = new User();\n  }\n\n  deserialize(input: Partial<CustomerCareActivityInterface>): CustomerCareActivity {\n    if (!input) {\n      return;\n    }\n    super.deserialize(input);\n    Object.assign(this, input);\n\n    if (input.dateActivity) {\n      this.date = input.dateActivity;\n      this.dateBinding = new Date(input.dateActivity);\n    }\n\n    this.customer = input.customer instanceof Customer ? input.customer : new Customer().deserialize(input.customer);\n    this.assignedStaff =\n      input.assignedStaff instanceof User ? input.assignedStaff : new User().deserialize(input.assignedStaff);\n\n    this.giftPrice = (+input.giftPrice).format();\n    return this;\n  }\n\n  public toJSON() {\n    return {\n      customerId: this.customer ? this.customer.id : null,\n      dateActivity: this.date_str,\n      type: this.type || null,\n      reason: this.reason || null,\n      giftPrice: this.giftPrice.toNumber() || 0,\n      status: this.status || null,\n      assignedStaffId: this.assignedStaff ? this.assignedStaff.id : null,\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from './api.service';\nimport { CustomerCareActivity } from 'models/customer-care-activity';\nimport { DownloadService } from './download.service';\nimport { RootScopeService } from 'app/services/root-scope.service';\nimport { RoleService } from 'app/role.service';\nimport { Roles } from 'app/guard/roles';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CareActivityService {\n  constructor(\n    private _api: ApiService,\n    private _download: DownloadService,\n    private _rootScope: RootScopeService,\n    private _role: RoleService,\n  ) {}\n\n  public filterActivities(opts: any = {}) {\n    const _opts: any = {\n      role: this._rootScope.currentUser.id ? this._rootScope.currentUser.role : Roles.MYTEL_ADMIN,\n    };\n\n    if (this._role.is_branch_director) {\n      _opts.branchId =\n        this._rootScope.currentUser.id && this._rootScope.currentUser.branchId\n          ? this._rootScope.currentUser.branchId\n          : 0;\n    }\n\n    if (this._role.is_hq_sale_staff || this._role.is_branch_sale_staff) {\n      _opts.assignedStaffId = this._rootScope.currentUser.id ? this._rootScope.currentUser.id : 0;\n    }\n\n    return this._api.get(`care-activity`, { ..._opts, ...opts }).map((res) => {\n      res.data.customerCareActivityList = res.data.customerCareActivityList.map((item) =>\n        new CustomerCareActivity().deserialize(item),\n      );\n      return res.data;\n    });\n  }\n\n  public createCareActivity(data: any) {\n    return this._api.post(`care-activity`, data);\n  }\n\n  public updateCareActivity(id: number, data: any) {\n    return this._api.put(`care-activity/${id}`, data);\n  }\n\n  public removeCareActivity(id: number) {\n    return this._api.delete(`care-activity/${id}`);\n  }\n\n  public exportCCM(opts: any = {}) {\n    const _opts: any = {\n      role: this._rootScope.currentUser.id ? this._rootScope.currentUser.role : Roles.MYTEL_ADMIN,\n    };\n\n    if (this._role.is_branch_director) {\n      _opts.branchId =\n        this._rootScope.currentUser.id && this._rootScope.currentUser.branchId\n          ? this._rootScope.currentUser.branchId\n          : 0;\n    }\n\n    if (this._role.is_hq_sale_staff || this._role.is_branch_sale_staff) {\n      _opts.assignedStaffId = this._rootScope.currentUser.id ? this._rootScope.currentUser.id : 0;\n    }\n\n    return this._download.get(`care-activity/export`, { ..._opts, ...opts });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { KeyCloakService } from './kc.service';\nimport { KeyCloakUser } from 'models/kc-user';\nimport { environment } from 'environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StaffService {\n  constructor(private _kc: KeyCloakService) {}\n\n  public getStaffs(params?: any) {\n    return this._kc.get(`admin/realms/${environment.kc_realm}/users`, params).map((res) => {\n      const data: KeyCloakUser[] = [];\n\n      res.map((item) => {\n        if (item.email) {\n          data.push(new KeyCloakUser().deserialize(item));\n        }\n      });\n\n      return data;\n    });\n  }\n}\n"],"sourceRoot":""}