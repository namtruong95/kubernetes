{"version":3,"sources":["webpack:///./src/app/dbr/report/report-sale-activity/report-sale-activity.component.html","webpack:///./src/app/dbr/report/report-sale-activity/report-sale-activity.component.scss","webpack:///./src/app/dbr/report/report-sale-activity/report-sale-activity.component.ts","webpack:///./src/app/dbr/report/report-sale-activity/report-sale-activity.module.ts"],"names":[],"mappings":"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","file":"report-sale-activity-report-sale-activity-module.962a007f5c580511e0e9.js","sourcesContent":["module.exports = \"<app-report-filter (changeFilter)=\\\"exportReportSaleActivity($event)\\\" (changeTermPreviewReport)=\\\"previewReportSaleActivity($event)\\\"></app-report-filter>\\n\\n<div class=\\\"table-responsive py-4\\\">\\n  <span>Showing {{ query.from }} to {{ query.to }} of {{ query.totalElements }} entries</span>\\n  <table class=\\\"table sale-activity-table\\\">\\n    <thead>\\n      <tr>\\n        <th class=\\\"cursor-pointer\\\" (click)=\\\"addOrder('customer_name')\\\">\\n          Customer\\n          <i class=\\\"fa {{ getClassOrder('customer_name') }}\\\"></i>\\n        </th>\\n        <th class=\\\"cursor-pointer\\\" (click)=\\\"addOrder('staff_user_name')\\\">\\n          Staff\\n          <i class=\\\"fa {{ getClassOrder('staff_user_name') }}\\\"></i>\\n        </th>\\n        <th class=\\\"cursor-pointer\\\" (click)=\\\"addOrder('staff_full_name')\\\">\\n          Full Name\\n          <i class=\\\"fa {{ getClassOrder('staff_full_name') }}\\\"></i>\\n        </th>\\n        <th class=\\\"cursor-pointer\\\" (click)=\\\"addOrder('statusOfProcessName')\\\">\\n          Activity Type\\n          <i class=\\\"fa {{ getClassOrder('statusOfProcessName') }}\\\"></i>\\n        </th>\\n        <th class=\\\"cursor-pointer\\\" (click)=\\\"addOrder('dateDisplay')\\\">\\n          Sale Date\\n          <i class=\\\"fa {{ getClassOrder('dateDisplay') }}\\\"></i>\\n        </th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let saleActivity of saleActivities;\\\">\\n        <td>{{ saleActivity.customer_name }}</td>\\n        <td>{{ saleActivity.staff_user_name }}</td>\\n        <td>{{ saleActivity.staff_full_name }}</td>\\n        <td>{{ saleActivity.statusOfProcessName }}</td>\\n        <td>{{ saleActivity.dateDisplay }}</td>\\n      </tr>\\n      <tr [ngClass]=\\\"{ 'hidden': saleActivities.length > 0 }\\\">\\n        <td colspan=\\\"5\\\" class=\\\"text-center\\\">\\n          Data not found\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\\n<div class=\\\"pagination mt-4\\\" [ngClass]=\\\"{ 'hidden': saleActivities.length === 0 }\\\">\\n  <pagination\\n    class=\\\"pagination-md\\\"\\n    [totalItems]=\\\"query.totalElements\\\"\\n    [(ngModel)]=\\\"query.currentPage\\\"\\n    pageBtnClass=\\\"btn\\\"\\n    [itemsPerPage]=\\\"query.size\\\"\\n    [maxSize]=\\\"5\\\"\\n    (pageChanged)=\\\"pageChanged($event)\\\"\\n    previousText=\\\"&lsaquo;\\\"\\n    nextText=\\\"&rsaquo;\\\"\\n    firstText=\\\"&laquo;\\\"\\n    lastText=\\\"&raquo;\\\">\\n  </pagination>\\n</div>\\n\"","module.exports = \".sale-activity-table.table thead th,\\n.sale-activity-table.table tbody td {\\n  min-width: 200px; }\\n  .sale-activity-table.table thead th:first-child,\\n  .sale-activity-table.table tbody td:first-child {\\n    max-width: 150px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ReportService } from 'shared/services/report.service';\nimport { NotifyService } from 'shared/utils/notify.service';\nimport * as moment from 'moment';\nimport { saveAs } from 'file-saver';\nimport { QueryBuilder } from 'shared/utils/query-builder';\nimport { SaleActivity } from 'models/sale-activity';\nimport * as orderBy from 'lodash/orderBy';\n\ninterface OrderCareActivity {\n  columnName: string;\n  type: string;\n}\n\n@Component({\n  selector: 'app-report-sale-activity',\n  templateUrl: './report-sale-activity.component.html',\n  styleUrls: ['./report-sale-activity.component.scss'],\n})\nexport class ReportSaleActivityComponent implements OnInit {\n  public query: QueryBuilder = new QueryBuilder();\n  public saleActivities: SaleActivity[] = [];\n\n  private _orderArr: OrderCareActivity[] = [];\n  private _filterQuery: any = {};\n\n  public get orderColumnName(): string[] {\n    return this._orderArr.map((item) => {\n      return item.columnName;\n    });\n  }\n  public get orderType(): string[] {\n    return this._orderArr.map((item) => {\n      return item.type;\n    });\n  }\n\n  constructor(private _notify: NotifyService, private _reportSv: ReportService) {}\n\n  ngOnInit() {}\n\n  private _getListSaleActivity() {\n    const parmas = {\n      ...this.query.queryJSON(),\n      ...this._filterQuery,\n    };\n    this._reportSv.previewReportSaleActivity(parmas).subscribe(\n      (res) => {\n        this.saleActivities = res.saleActivityList;\n        this.query.setQuery(res);\n      },\n      (errors) => {\n        this._notify.error(errors);\n      },\n    );\n  }\n\n  public exportReportSaleActivity(event: any = {}) {\n    this._reportSv.reportSaleActivity(event).subscribe(\n      (res) => {\n        saveAs(res, `Sale-Activity-${moment().unix()}.xlsx`);\n      },\n      (errors) => {\n        this._notify.error(errors);\n      },\n    );\n  }\n\n  public previewReportSaleActivity(event: any = {}) {\n    this._filterQuery = event;\n    this.query.resetQuery();\n    this._getListSaleActivity();\n  }\n\n  public addOrder(columnName: string) {\n    const index = this._orderArr.findIndex((item) => item.columnName === columnName);\n\n    if (this._orderArr.length > 0 && this._orderArr[0].columnName === columnName) {\n      if (this._orderArr[0].type === 'desc') {\n        this._orderArr[0].type = 'asc';\n      } else {\n        this._orderArr[0].type = 'desc';\n      }\n    } else {\n      this._orderArr = [];\n      this._orderArr.push({\n        columnName: columnName,\n        type: 'desc',\n      });\n    }\n\n    setTimeout(() => {\n      this._orderCustomer();\n    }, 0);\n  }\n\n  private _orderCustomer() {\n    this.saleActivities = orderBy(this.saleActivities, this.orderColumnName, this.orderType);\n  }\n\n  public getClassOrder(columnName: string): string {\n    if (this._orderArr.length > 0 && this._orderArr[0].columnName === columnName) {\n      if (this._orderArr[0].type === 'desc') {\n        return 'fa-sort-down';\n      }\n\n      return 'fa-sort-up';\n    }\n\n    return 'fa-sort';\n  }\n\n  public pageChanged(event) {\n    this.query.currentPage = event.page;\n    this._getListSaleActivity();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReportSaleActivityComponent } from './report-sale-activity.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { ReportFilterModule } from '../report-filter/report-filter.module';\nimport { ReportService } from 'shared/services/report.service';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReportSaleActivityComponent,\n  },\n];\n@NgModule({\n  imports: [CommonModule, RouterModule.forChild(routes), FormsModule, ReportFilterModule, PaginationModule.forRoot()],\n  declarations: [ReportSaleActivityComponent],\n  providers: [ReportService],\n})\nexport class ReportSaleActivityModule {}\n"],"sourceRoot":""}